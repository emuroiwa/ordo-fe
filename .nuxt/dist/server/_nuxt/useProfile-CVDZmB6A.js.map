{"version":3,"file":"useProfile-CVDZmB6A.js","sources":["../../../../composables/useProfile.ts"],"sourcesContent":["import type { Ref } from 'vue'\n\nexport interface User {\n  id: string\n  name: string\n  email: string\n  phone?: string\n  business_name?: string\n  slug?: string\n  service_category?: string\n  roles: string[]\n  is_vendor: boolean\n  is_customer: boolean\n  is_active: boolean\n  avatar?: string\n  avatar_url: string\n  email_verified_at?: string\n  phone_verified_at?: string\n  last_login_at?: string\n  created_at: string\n  updated_at: string\n  unread_notifications_count?: number\n  stats?: {\n    services_count: number\n    active_services_count: number\n  }\n}\n\nexport interface ProfileForm {\n  name: string\n  email: string\n  phone?: string\n  business_name?: string\n  service_category?: string\n  roles: string[]\n}\n\nexport interface PasswordForm {\n  current_password: string\n  password: string\n  password_confirmation: string\n}\n\nexport interface ProfileStats {\n  services_count: number\n  active_services_count: number\n  total_bookings: number\n  total_reviews: number\n  average_rating: number\n  member_since: string\n  profile_completion: number\n}\n\nexport const useProfile = () => {\n  const { $fetch } = useNuxtApp()\n\n  // State\n  const user: Ref<User | null> = ref(null)\n  const stats: Ref<ProfileStats | null> = ref(null)\n  const loading = ref(false)\n  const uploading = ref(false)\n  const error: Ref<string | null> = ref(null)\n\n  // Fetch user profile\n  const fetchProfile = async () => {\n    loading.value = true\n    error.value = null\n\n    try {\n      user.value = await $fetch('/api/v1/profile')\n      return user.value\n    } catch (err: any) {\n      error.value = err.data?.message || 'Failed to fetch profile'\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // Update profile\n  const updateProfile = async (profileData: Partial<ProfileForm>) => {\n    loading.value = true\n    error.value = null\n\n    try {\n      const formData = new FormData()\n\n      // Add profile fields\n      Object.entries(profileData).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          if (Array.isArray(value)) {\n            value.forEach((item, index) => {\n              formData.append(`${key}[${index}]`, item)\n            })\n          } else {\n            formData.append(key, String(value))\n          }\n        }\n      })\n\n      const response = await $fetch('/api/v1/profile', {\n        method: 'PUT',\n        body: formData\n      })\n\n      user.value = response.user\n      return response\n    } catch (err: any) {\n      error.value = err.data?.message || 'Failed to update profile'\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // Update password\n  const updatePassword = async (passwordData: PasswordForm) => {\n    loading.value = true\n    error.value = null\n\n    try {\n      const response = await $fetch('/api/v1/profile/password', {\n        method: 'PUT',\n        body: passwordData\n      })\n\n      return response\n    } catch (err: any) {\n      error.value = err.data?.message || 'Failed to update password'\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // Upload avatar\n  const uploadAvatar = async (file: File) => {\n    uploading.value = true\n    error.value = null\n\n    try {\n      const formData = new FormData()\n      formData.append('avatar', file)\n\n      const response = await $fetch('/api/v1/profile/avatar', {\n        method: 'POST',\n        body: formData\n      })\n\n      // Update user avatar URL\n      if (user.value) {\n        user.value.avatar_url = response.avatar_url\n      }\n\n      return response\n    } catch (err: any) {\n      error.value = err.data?.message || 'Failed to upload avatar'\n      throw err\n    } finally {\n      uploading.value = false\n    }\n  }\n\n  // Delete avatar\n  const deleteAvatar = async () => {\n    loading.value = true\n    error.value = null\n\n    try {\n      const response = await $fetch('/api/v1/profile/avatar', {\n        method: 'DELETE'\n      })\n\n      // Update user avatar URL\n      if (user.value) {\n        user.value.avatar_url = response.avatar_url\n        user.value.avatar = undefined\n      }\n\n      return response\n    } catch (err: any) {\n      error.value = err.data?.message || 'Failed to delete avatar'\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // Fetch profile statistics\n  const fetchStats = async () => {\n    try {\n      stats.value = await $fetch('/api/v1/profile/stats')\n      return stats.value\n    } catch (err: any) {\n      error.value = err.data?.message || 'Failed to fetch profile stats'\n      throw err\n    }\n  }\n\n  // Toggle role between customer and vendor\n  const toggleRole = async (role: 'customer' | 'vendor') => {\n    if (!user.value) return\n\n    const currentRoles = user.value.roles || ['customer']\n    let newRoles: string[]\n\n    if (role === 'vendor') {\n      // Add vendor role if not present\n      newRoles = currentRoles.includes('vendor') \n        ? currentRoles \n        : [...currentRoles, 'vendor']\n    } else {\n      // Remove vendor role, keep customer\n      newRoles = currentRoles.filter(r => r !== 'vendor')\n      if (!newRoles.includes('customer')) {\n        newRoles.push('customer')\n      }\n    }\n\n    return await updateProfile({ roles: newRoles })\n  }\n\n  // Check if profile is complete\n  const isProfileComplete = computed(() => {\n    if (!user.value) return false\n\n    const requiredFields = ['name', 'email']\n    const vendorFields = user.value.is_vendor ? ['business_name', 'service_category'] : []\n    const allRequiredFields = [...requiredFields, ...vendorFields]\n\n    return allRequiredFields.every(field => {\n      const value = user.value![field as keyof User]\n      return value !== null && value !== undefined && value !== ''\n    })\n  })\n\n  // Calculate profile completion percentage\n  const profileCompletion = computed(() => {\n    if (!user.value) return 0\n\n    const fields = {\n      name: !!user.value.name,\n      email: !!user.value.email,\n      phone: !!user.value.phone,\n      business_name: !!user.value.business_name,\n      service_category: !!user.value.service_category,\n      avatar: !!user.value.avatar,\n    }\n\n    const completed = Object.values(fields).filter(Boolean).length\n    const total = Object.keys(fields).length\n\n    return Math.round((completed / total) * 100)\n  })\n\n  // Get display name (business name or regular name)\n  const displayName = computed(() => {\n    if (!user.value) return ''\n    return user.value.business_name || user.value.name\n  })\n\n  // Get user initials for avatar fallback\n  const userInitials = computed(() => {\n    if (!user.value?.name) return 'U'\n    return user.value.name\n      .split(' ')\n      .map(word => word.charAt(0))\n      .join('')\n      .toUpperCase()\n      .slice(0, 2)\n  })\n\n  return {\n    // State\n    user,\n    stats,\n    loading,\n    uploading,\n    error,\n\n    // Computed\n    isProfileComplete,\n    profileCompletion,\n    displayName,\n    userInitials,\n\n    // Methods\n    fetchProfile,\n    updateProfile,\n    updatePassword,\n    uploadAvatar,\n    deleteAvatar,\n    fetchStats,\n    toggleRole\n  }\n}"],"names":[],"mappings":"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"}