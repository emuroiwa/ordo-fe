{"version":3,"file":"create-DSlrU3NL.js","sources":["../../../../pages/dashboard/services/create.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <!-- Header -->\n    <div class=\"bg-white shadow-sm border-b\">\n      <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n        <div class=\"flex items-center justify-between\">\n          <div>\n            <h1 class=\"text-2xl font-bold text-gray-900\">Create New Service</h1>\n            <p class=\"mt-1 text-sm text-gray-600\">\n              Add a new service to your portfolio and start receiving bookings\n            </p>\n          </div>\n          \n          <NuxtLink\n            to=\"/dashboard/services\"\n            class=\"inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            Back to Services\n          </NuxtLink>\n        </div>\n      </div>\n    </div>\n\n    <!-- Form Container -->\n    <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <ServiceForm\n        :categories=\"categories\"\n        :loading=\"loading\"\n        :error=\"error\"\n        @submit=\"handleCreateService\"\n        @cancel=\"handleCancel\"\n      />\n    </div>\n\n    <!-- Success Modal -->\n    <div\n      v-if=\"showSuccessModal\"\n      class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n      @click=\"closeSuccessModal\"\n    >\n      <div class=\"bg-white rounded-lg p-6 max-w-md mx-4\" @click.stop>\n        <div class=\"text-center\">\n          <div class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 mb-4\">\n            <svg class=\"h-6 w-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n            </svg>\n          </div>\n          \n          <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Service Created!</h3>\n          <p class=\"text-sm text-gray-600 mb-6\">\n            Your service has been created successfully. It's now live and ready to receive bookings.\n          </p>\n          \n          <div class=\"flex space-x-3\">\n            <button\n              @click=\"viewService\"\n              class=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              View Service\n            </button>\n            <button\n              @click=\"createAnother\"\n              class=\"flex-1 px-4 py-2 bg-white text-blue-600 border border-blue-600 rounded-md hover:bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              Create Another\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { ServiceForm } from '~/composables/useServices'\n\n// Meta\ndefinePageMeta({\n  layout: 'dashboard',\n  middleware: 'auth'\n})\n\n// Head\nuseHead({\n  title: 'Create Service - Dashboard'\n})\n\n// Composables\nconst { createService, fetchCategories, error, loading } = useServices()\nconst { currentRole } = useRole()\nconst router = useRouter()\n\n// State\nconst categories = ref([])\nconst showSuccessModal = ref(false)\nconst createdService = ref(null)\n\n// Redirect if not vendor\nwatch(currentRole, (role) => {\n  if (role === 'customer') {\n    router.push('/dashboard')\n  }\n}, { immediate: true })\n\n// Fetch categories on mount\nonMounted(async () => {\n  try {\n    categories.value = await fetchCategories()\n  } catch (err) {\n    console.error('Failed to fetch categories:', err)\n  }\n})\n\n// Methods\nconst handleCreateService = async (serviceData: ServiceForm) => {\n  try {\n    const result = await createService(serviceData)\n    createdService.value = result.service\n    showSuccessModal.value = true\n  } catch (err) {\n    console.error('Failed to create service:', err)\n    // Error is handled by the composable and shown in the form\n  }\n}\n\nconst handleCancel = () => {\n  router.push('/dashboard/services')\n}\n\nconst closeSuccessModal = () => {\n  showSuccessModal.value = false\n  router.push('/dashboard/services')\n}\n\nconst viewService = () => {\n  if (createdService.value?.full_slug) {\n    router.push(`/services/${createdService.value.full_slug}`)\n  } else {\n    router.push('/dashboard/services')\n  }\n}\n\nconst createAnother = () => {\n  showSuccessModal.value = false\n  createdService.value = null\n  // Stay on the same page to create another service\n  window.scrollTo(0, 0)\n}\n</script>"],"names":["_ssrRenderAttrs","_mergeProps","_push","_parent","_createBlock","_createVNode","_unref"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsFA,YAAQ;AAAA,MACN,OAAO;AAAA,IAAA,CACR;AAGD,UAAM,EAAE,eAAgC,OAAO,QAAA,IAAY,YAAA;AAC3D,UAAM,EAAE,YAAA,IAAgB,QAAA;AACxB,UAAM,SAAS,UAAA;AAGf,UAAM,aAAa,IAAI,EAAE;AACzB,UAAM,mBAAmB,IAAI,KAAK;AAClC,UAAM,iBAAiB,IAAI,IAAI;AAG/B,UAAM,aAAa,CAAC,SAAS;AAC3B,UAAI,SAAS,YAAY;AACvB,eAAO,KAAK,YAAY;AAAA,MAC1B;AAAA,IACF,GAAG,EAAE,WAAW,MAAM;AAYtB,UAAM,sBAAsB,OAAO,gBAA6B;AAC9D,UAAI;AACF,cAAM,SAAS,MAAM,cAAc,WAAW;AAC9C,uBAAe,QAAQ,OAAO;AAC9B,yBAAiB,QAAQ;AAAA,MAC3B,SAAS,KAAK;AACZ,gBAAQ,MAAM,6BAA6B,GAAG;AAAA,MAEhD;AAAA,IACF;AAEA,UAAM,eAAe,MAAM;AACzB,aAAO,KAAK,qBAAqB;AAAA,IACnC;;;;AAjIO,YAAA,OAAAA,eAAAC,WAAA,EAAA,OAAM,6BAAyB,MAAA,CAAA,CAAA,+UAAA;;QAa1B,IAAG;AAAA,QACH,OAAM;AAAA,MAAA;yBAFR,CAQW,GAAAC,QAAAC,UAAA,aAAA;;;;;4BAJTC,YAEM,OAAA;AAAA,gBAFD,OAAM;AAAA,gBAAe,MAAK;AAAA,gBAAO,QAAO;AAAA,gBAAe,SAAQ;AAAA,cAAA;gBAClEC,YAAwG,QAAA;AAAA,kBAAlG,kBAAe;AAAA,kBAAQ,mBAAgB;AAAA,kBAAQ,gBAAa;AAAA,kBAAI,GAAE;AAAA,gBAAA;;8BACpE,oBAER;AAAA,YAAA;AAAA;;;;;;QAQD,YAAYC,MAAA,UAAA;AAAA,QACZ,SAASA,MAAA,OAAA;AAAA,QACT,OAAOA,MAAA,KAAA;AAAA,QACP,UAAQ;AAAA,QACR,UAAQ;AAAA,MAAA;;UAMLA,MAAA,gBAAA,GAAgB;;;;;;;;;;;;;;;"}