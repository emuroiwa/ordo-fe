{"version":3,"file":"calendar-Bwcubqk8.js","sources":["../../../../composables/useAvailability.ts","../../../../components/calendar/AvailabilityModal.vue","../../../../components/calendar/BookingModal.vue","../../../../components/booking/RescheduleModal.vue","../../../../components/calendar/AppointmentModal.vue","../../../../pages/dashboard/calendar.vue"],"sourcesContent":["import { ref, readonly } from 'vue'\n\nexport interface VendorAvailability {\n  id: string\n  vendor_id: string\n  day_of_week: string\n  start_time: string\n  end_time: string\n  break_times: Array<{ start: string; end: string }> | null\n  default_duration: number\n  buffer_time: number\n  effective_from: string | null\n  effective_until: string | null\n  is_active: boolean\n  created_at: string\n  updated_at: string\n}\n\nexport interface AvailabilityData {\n  working_days: string[]\n  working_hours: {\n    start: string\n    end: string\n  }\n  break_times: Array<{ start: string; end: string }>\n  default_duration: number\n  buffer_time: number\n  apply_to: 'ongoing' | 'dateRange'\n  date_range?: {\n    start: string\n    end: string\n  }\n}\n\nexport interface TimeSlot {\n  start: string\n  end: string\n  duration: number\n}\n\nexport interface WeeklyAvailability {\n  id: string\n  title: string\n  start: string\n  end: string\n  type: string\n  backgroundColor: string\n  borderColor: string\n  classNames: string[]\n}\n\nconst availabilities = ref<VendorAvailability[]>([])\nconst loading = ref(false)\nconst error = ref<string | null>(null)\n\nexport const useAvailability = () => {\n  const config = useRuntimeConfig()\n\n  const makeApiCall = async (url: string, options: any = {}) => {\n    const tokenCookie = useCookie('auth-token')\n    const headers: Record<string, string> = {\n      'Accept': 'application/json',\n      ...options.headers\n    }\n\n    if (tokenCookie.value) {\n      headers['Authorization'] = `Bearer ${tokenCookie.value}`\n    }\n\n    if (options.method !== 'GET' && !headers['Content-Type']) {\n      headers['Content-Type'] = 'application/json'\n    }\n\n    return await $fetch(url, {\n      ...options,\n      baseURL: config.public.apiBase,\n      headers\n    })\n  }\n\n  const fetchAvailabilities = async (filters: any = {}) => {\n    try {\n      loading.value = true\n      error.value = null\n\n      const params = new URLSearchParams()\n      \n      if (filters.date) {\n        params.append('date', filters.date)\n      }\n      \n      if (filters.day_of_week) {\n        params.append('day_of_week', filters.day_of_week)\n      }\n\n      const url = `/api/v1/availability${params.toString() ? '?' + params.toString() : ''}`\n      const response = await makeApiCall(url)\n\n      if (response.success) {\n        availabilities.value = response.data\n        return response.data\n      } else {\n        throw new Error(response.message || 'Failed to fetch availabilities')\n      }\n    } catch (err: any) {\n      error.value = err.message || 'Failed to fetch availabilities'\n      console.error('Fetch availabilities error:', err)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const createAvailability = async (data: AvailabilityData) => {\n    try {\n      loading.value = true\n      error.value = null\n\n      const response = await makeApiCall('/api/v1/availability', {\n        method: 'POST',\n        body: JSON.stringify(data)\n      })\n\n      if (response.success) {\n        // Add new availabilities to the list\n        if (Array.isArray(response.data)) {\n          availabilities.value.push(...response.data)\n        } else {\n          availabilities.value.push(response.data)\n        }\n        return response.data\n      } else {\n        throw new Error(response.message || 'Failed to create availability')\n      }\n    } catch (err: any) {\n      error.value = err.message || 'Failed to create availability'\n      console.error('Create availability error:', err)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const updateAvailability = async (id: string, data: Partial<VendorAvailability>) => {\n    try {\n      loading.value = true\n      error.value = null\n\n      const response = await makeApiCall(`/api/v1/availability/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify(data)\n      })\n\n      if (response.success) {\n        // Update the availability in the list\n        const index = availabilities.value.findIndex(a => a.id === id)\n        if (index !== -1) {\n          availabilities.value[index] = response.data\n        }\n        return response.data\n      } else {\n        throw new Error(response.message || 'Failed to update availability')\n      }\n    } catch (err: any) {\n      error.value = err.message || 'Failed to update availability'\n      console.error('Update availability error:', err)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const deleteAvailability = async (id: string) => {\n    try {\n      loading.value = true\n      error.value = null\n\n      const response = await makeApiCall(`/api/v1/availability/${id}`, {\n        method: 'DELETE'\n      })\n\n      if (response.success) {\n        // Remove from the list\n        availabilities.value = availabilities.value.filter(a => a.id !== id)\n        return true\n      } else {\n        throw new Error(response.message || 'Failed to delete availability')\n      }\n    } catch (err: any) {\n      error.value = err.message || 'Failed to delete availability'\n      console.error('Delete availability error:', err)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const getTimeSlots = async (date: string, serviceId?: string) => {\n    try {\n      loading.value = true\n      error.value = null\n\n      const params = new URLSearchParams({ date })\n      if (serviceId) {\n        params.append('service_id', serviceId)\n      }\n\n      const response = await makeApiCall(`/api/v1/availability/time-slots?${params.toString()}`)\n\n      if (response.success) {\n        return {\n          slots: response.data as TimeSlot[],\n          meta: response.meta\n        }\n      } else {\n        throw new Error(response.message || 'Failed to get time slots')\n      }\n    } catch (err: any) {\n      error.value = err.message || 'Failed to get time slots'\n      console.error('Get time slots error:', err)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const getWeeklyOverview = async (startDate?: string) => {\n    try {\n      loading.value = true\n      error.value = null\n\n      const params = new URLSearchParams()\n      if (startDate) {\n        params.append('start_date', startDate)\n      }\n\n      const url = `/api/v1/availability/weekly-overview${params.toString() ? '?' + params.toString() : ''}`\n      const response = await makeApiCall(url)\n\n      if (response.success) {\n        return {\n          events: response.data as WeeklyAvailability[],\n          meta: response.meta\n        }\n      } else {\n        throw new Error(response.message || 'Failed to get weekly overview')\n      }\n    } catch (err: any) {\n      error.value = err.message || 'Failed to get weekly overview'\n      console.error('Get weekly overview error:', err)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const bulkUpdateAvailabilities = async (availabilityIds: string[], action: 'activate' | 'deactivate' | 'delete', data?: any) => {\n    try {\n      loading.value = true\n      error.value = null\n\n      const response = await makeApiCall('/api/v1/availability/bulk-update', {\n        method: 'POST',\n        body: JSON.stringify({\n          availability_ids: availabilityIds,\n          action,\n          data\n        })\n      })\n\n      if (response.success) {\n        // Refresh the availabilities list\n        await fetchAvailabilities()\n        return response.data\n      } else {\n        throw new Error(response.message || 'Failed to perform bulk update')\n      }\n    } catch (err: any) {\n      error.value = err.message || 'Failed to perform bulk update'\n      console.error('Bulk update error:', err)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const isDateAvailable = (date: string | Date, availabilityList?: VendorAvailability[]) => {\n    const targetDate = new Date(date)\n    const dayName = targetDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase()\n    const dateString = targetDate.toISOString().split('T')[0]\n    \n    const availabilityData = availabilityList || availabilities.value\n    \n    const dayAvailability = availabilityData.find(availability => {\n      if (availability.day_of_week !== dayName || !availability.is_active) {\n        return false\n      }\n      \n      // Check if the date falls within the effective range\n      if (availability.effective_from && dateString < availability.effective_from) {\n        return false\n      }\n      \n      if (availability.effective_until && dateString > availability.effective_until) {\n        return false\n      }\n      \n      return true\n    })\n    \n    return !!dayAvailability\n  }\n\n  const getAvailabilityForDate = (date: string | Date, availabilityList?: VendorAvailability[]) => {\n    const targetDate = new Date(date)\n    const dayName = targetDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase()\n    const dateString = targetDate.toISOString().split('T')[0]\n    \n    const availabilityData = availabilityList || availabilities.value\n    \n    return availabilityData.find(availability => {\n      if (availability.day_of_week !== dayName || !availability.is_active) {\n        return false\n      }\n      \n      // Check if the date falls within the effective range\n      if (availability.effective_from && dateString < availability.effective_from) {\n        return false\n      }\n      \n      if (availability.effective_until && dateString > availability.effective_until) {\n        return false\n      }\n      \n      return true\n    })\n  }\n\n  const clearError = () => {\n    error.value = null\n  }\n\n  return {\n    // State\n    availabilities: readonly(availabilities),\n    loading: readonly(loading),\n    error: readonly(error),\n\n    // Actions\n    fetchAvailabilities,\n    createAvailability,\n    updateAvailability,\n    deleteAvailability,\n    getTimeSlots,\n    getWeeklyOverview,\n    bulkUpdateAvailabilities,\n\n    // Utilities\n    isDateAvailable,\n    getAvailabilityForDate,\n    clearError\n  }\n}","<template>\n  <div class=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n    <div class=\"relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white\">\n      <!-- Header -->\n      <div class=\"flex items-center justify-between mb-6\">\n        <h3 class=\"text-lg font-medium text-gray-900\">Set Availability</h3>\n        <button\n          @click=\"emit('close')\"\n          class=\"text-gray-400 hover:text-gray-600 transition-colors\"\n        >\n          <XMarkIcon class=\"w-6 h-6\" />\n        </button>\n      </div>\n\n      <!-- Content -->\n      <form @submit.prevent=\"handleSave\">\n        <!-- Working Days -->\n        <div class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-3\">Working Days</label>\n          <div class=\"grid grid-cols-7 gap-2\">\n            <div\n              v-for=\"(day, index) in daysOfWeek\"\n              :key=\"day.value\"\n              class=\"text-center\"\n            >\n              <label class=\"block text-xs text-gray-500 mb-1\">{{ day.label }}</label>\n              <input\n                v-model=\"workingDays\"\n                :value=\"day.value\"\n                type=\"checkbox\"\n                class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500\"\n              >\n            </div>\n          </div>\n        </div>\n\n        <!-- Working Hours -->\n        <div class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-3\">Working Hours</label>\n          <div class=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label class=\"block text-xs text-gray-500 mb-1\">Start Time</label>\n              <select\n                v-model=\"startTime\"\n                class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option v-for=\"time in timeOptions\" :key=\"time.value\" :value=\"time.value\">\n                  {{ time.label }}\n                </option>\n              </select>\n            </div>\n            <div>\n              <label class=\"block text-xs text-gray-500 mb-1\">End Time</label>\n              <select\n                v-model=\"endTime\"\n                class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option v-for=\"time in timeOptions\" :key=\"time.value\" :value=\"time.value\">\n                  {{ time.label }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <!-- Break Times -->\n        <div class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-3\">Break Times</label>\n          <div class=\"space-y-3\">\n            <div\n              v-for=\"(breakTime, index) in breakTimes\"\n              :key=\"index\"\n              class=\"flex items-center space-x-3\"\n            >\n              <select\n                v-model=\"breakTime.start\"\n                class=\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option v-for=\"time in timeOptions\" :key=\"time.value\" :value=\"time.value\">\n                  {{ time.label }}\n                </option>\n              </select>\n              <span class=\"text-gray-500\">to</span>\n              <select\n                v-model=\"breakTime.end\"\n                class=\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option v-for=\"time in timeOptions\" :key=\"time.value\" :value=\"time.value\">\n                  {{ time.label }}\n                </option>\n              </select>\n              <button\n                type=\"button\"\n                @click=\"removeBreakTime(index)\"\n                class=\"text-red-600 hover:text-red-700\"\n              >\n                <XMarkIcon class=\"w-5 h-5\" />\n              </button>\n            </div>\n            \n            <button\n              type=\"button\"\n              @click=\"addBreakTime\"\n              class=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n            >\n              <PlusIcon class=\"w-4 h-4 mr-2\" />\n              Add Break Time\n            </button>\n          </div>\n        </div>\n\n        <!-- Appointment Duration -->\n        <div class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">Default Appointment Duration</label>\n          <select\n            v-model=\"defaultDuration\"\n            class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n          >\n            <option value=\"30\">30 minutes</option>\n            <option value=\"60\">1 hour</option>\n            <option value=\"90\">1.5 hours</option>\n            <option value=\"120\">2 hours</option>\n          </select>\n        </div>\n\n        <!-- Buffer Time -->\n        <div class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">Buffer Time Between Appointments</label>\n          <select\n            v-model=\"bufferTime\"\n            class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n          >\n            <option value=\"0\">No buffer</option>\n            <option value=\"15\">15 minutes</option>\n            <option value=\"30\">30 minutes</option>\n            <option value=\"45\">45 minutes</option>\n          </select>\n        </div>\n\n        <!-- Date Range -->\n        <div class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-3\">Apply Settings To</label>\n          <div class=\"space-y-3\">\n            <label class=\"flex items-center\">\n              <input\n                v-model=\"applyTo\"\n                value=\"ongoing\"\n                type=\"radio\"\n                class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500\"\n              >\n              <span class=\"ml-2 text-sm text-gray-700\">All future dates</span>\n            </label>\n            <label class=\"flex items-center\">\n              <input\n                v-model=\"applyTo\"\n                value=\"dateRange\"\n                type=\"radio\"\n                class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500\"\n              >\n              <span class=\"ml-2 text-sm text-gray-700\">Specific date range</span>\n            </label>\n          </div>\n          \n          <div v-if=\"applyTo === 'dateRange'\" class=\"mt-3 grid grid-cols-2 gap-4\">\n            <div>\n              <label class=\"block text-xs text-gray-500 mb-1\">Start Date</label>\n              <input\n                v-model=\"startDate\"\n                type=\"date\"\n                class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              >\n            </div>\n            <div>\n              <label class=\"block text-xs text-gray-500 mb-1\">End Date</label>\n              <input\n                v-model=\"endDate\"\n                type=\"date\"\n                class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              >\n            </div>\n          </div>\n        </div>\n\n        <!-- Error Message -->\n        <div v-if=\"saveError || error\" class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n          <p class=\"text-sm text-red-700\">{{ saveError || error }}</p>\n        </div>\n\n        <!-- Actions -->\n        <div class=\"flex items-center justify-end space-x-3\">\n          <button\n            type=\"button\"\n            @click=\"emit('close')\"\n            :disabled=\"loading\"\n            class=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            :disabled=\"loading\"\n            class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center\"\n          >\n            <div v-if=\"loading\" class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n            {{ loading ? 'Saving...' : 'Save Availability' }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue'\nimport { XMarkIcon, PlusIcon } from '@heroicons/vue/24/outline'\n\n// Emits\nconst emit = defineEmits<{\n  close: []\n  save: [availability: any]\n}>()\n\n// Composables\nconst { createAvailability, loading, error, clearError } = useAvailability()\n\n// Reactive state\nconst workingDays = ref(['monday', 'tuesday', 'wednesday', 'thursday', 'friday'])\nconst startTime = ref('09:00')\nconst endTime = ref('17:00')\nconst breakTimes = ref([\n  { start: '12:00', end: '13:00' }\n])\nconst defaultDuration = ref('60')\nconst bufferTime = ref('15')\nconst applyTo = ref('ongoing')\nconst startDate = ref('')\nconst endDate = ref('')\nconst saveError = ref('')\n\n// Constants\nconst daysOfWeek = [\n  { value: 'sunday', label: 'Sun' },\n  { value: 'monday', label: 'Mon' },\n  { value: 'tuesday', label: 'Tue' },\n  { value: 'wednesday', label: 'Wed' },\n  { value: 'thursday', label: 'Thu' },\n  { value: 'friday', label: 'Fri' },\n  { value: 'saturday', label: 'Sat' }\n]\n\nconst timeOptions = Array.from({ length: 24 * 2 }, (_, i) => {\n  const hour = Math.floor(i / 2)\n  const minute = (i % 2) * 30\n  const time = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`\n  const display = new Date(`2000-01-01T${time}`).toLocaleTimeString('en-US', {\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true\n  })\n  return { value: time, label: display }\n})\n\n// Methods\nconst addBreakTime = () => {\n  breakTimes.value.push({ start: '12:00', end: '13:00' })\n}\n\nconst removeBreakTime = (index: number) => {\n  breakTimes.value.splice(index, 1)\n}\n\nconst handleSave = async () => {\n  try {\n    clearError()\n    saveError.value = ''\n\n    const availabilityData = {\n      working_days: workingDays.value,\n      working_hours: {\n        start: startTime.value,\n        end: endTime.value\n      },\n      break_times: breakTimes.value.filter(bt => bt.start && bt.end),\n      default_duration: parseInt(defaultDuration.value),\n      buffer_time: parseInt(bufferTime.value),\n      apply_to: applyTo.value,\n      date_range: applyTo.value === 'dateRange' ? {\n        start: startDate.value,\n        end: endDate.value\n      } : undefined\n    }\n\n    const result = await createAvailability(availabilityData)\n    \n    // Emit success\n    emit('save', result)\n    emit('close')\n  } catch (err: any) {\n    saveError.value = err.message || 'Failed to save availability'\n    console.error('Save availability error:', err)\n  }\n}\n\n// Set default dates\nconst today = new Date()\nstartDate.value = today.toISOString().split('T')[0]\nconst nextMonth = new Date(today)\nnextMonth.setMonth(today.getMonth() + 1)\nendDate.value = nextMonth.toISOString().split('T')[0]\n</script>","<template>\n  <div class=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n    <div class=\"relative top-20 mx-auto p-5 border w-11/12 md:w-2/3 lg:w-1/2 shadow-lg rounded-md bg-white\">\n      <!-- Header -->\n      <div class=\"flex items-center justify-between mb-6\">\n        <h3 class=\"text-lg font-medium text-gray-900\">Create New Appointment</h3>\n        <button\n          @click=\"emit('close')\"\n          class=\"text-gray-400 hover:text-gray-600 transition-colors\"\n        >\n          <XMarkIcon class=\"w-6 h-6\" />\n        </button>\n      </div>\n\n      <!-- Content -->\n      <form @submit.prevent=\"handleSave\">\n        <!-- Error Message -->\n        <div v-if=\"errorMessage\" class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm text-red-700\">{{ errorMessage }}</p>\n            </div>\n            <div class=\"ml-auto pl-3\">\n              <button\n                type=\"button\"\n                @click=\"clearMessages\"\n                class=\"inline-flex text-red-400 hover:text-red-600\"\n              >\n                <svg class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Success Message -->\n        <div v-if=\"successMessage\" class=\"mb-4 p-3 bg-green-50 border border-green-200 rounded-md\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <svg class=\"h-5 w-5 text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm text-green-700\">{{ successMessage }}</p>\n            </div>\n            <div class=\"ml-auto pl-3\">\n              <button\n                type=\"button\"\n                @click=\"clearMessages\"\n                class=\"inline-flex text-green-400 hover:text-green-600\"\n              >\n                <svg class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Customer Selection -->\n        <div class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">Customer</label>\n          <div class=\"relative\">\n            <input\n              v-model=\"customerSearch\"\n              @input=\"searchCustomers\"\n              type=\"text\"\n              placeholder=\"Search for customer by name or email...\"\n              class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n            >\n            \n            <!-- Customer Search Results -->\n            <div\n              v-if=\"showCustomerResults && customerResults.length > 0\"\n              class=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-auto\"\n            >\n              <div\n                v-for=\"customer in customerResults\"\n                :key=\"customer.id\"\n                @click=\"selectCustomer(customer)\"\n                class=\"px-3 py-2 cursor-pointer hover:bg-gray-50\"\n              >\n                <div class=\"font-medium\">{{ customer.name }}</div>\n                <div class=\"text-sm text-gray-500\">{{ customer.email }}</div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Selected Customer -->\n          <div v-if=\"selectedCustomer\" class=\"mt-2 p-3 bg-blue-50 rounded-md\">\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <div class=\"font-medium text-blue-900\">{{ selectedCustomer.name }}</div>\n                <div class=\"text-sm text-blue-700\">{{ selectedCustomer.email }}</div>\n              </div>\n              <button\n                type=\"button\"\n                @click=\"clearCustomer\"\n                class=\"text-blue-600 hover:text-blue-700\"\n              >\n                <XMarkIcon class=\"w-5 h-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Service Selection -->\n        <div class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">Service</label>\n          <select\n            v-model=\"selectedServiceId\"\n            @change=\"updateServiceDetails\"\n            class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n            required\n          >\n            <option value=\"\">Select a service</option>\n            <option v-for=\"service in services\" :key=\"service.id\" :value=\"service.id\">\n              {{ service.title }} - {{ service.currency || 'R' }}{{ service.price }}\n            </option>\n          </select>\n        </div>\n\n        <!-- Quick Select for Testing -->\n        <div class=\"mb-6 p-3 bg-yellow-50 border border-yellow-200 rounded-md\">\n          <div class=\"text-sm font-medium text-yellow-800 mb-2\">Quick Select (for testing):</div>\n          <div class=\"flex space-x-2\">\n            <button\n              type=\"button\"\n              @click=\"quickSelectCustomer\"\n              class=\"px-3 py-1 text-xs bg-yellow-100 text-yellow-800 border border-yellow-300 rounded hover:bg-yellow-200\"\n            >\n              Select John Doe\n            </button>\n            <button\n              type=\"button\"\n              @click=\"quickSelectService\"\n              class=\"px-3 py-1 text-xs bg-yellow-100 text-yellow-800 border border-yellow-300 rounded hover:bg-yellow-200\"\n            >\n              Select First Service\n            </button>\n          </div>\n        </div>\n\n        <!-- Date and Time -->\n        <div class=\"mb-6\">\n          <div class=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label class=\"block text-sm font-medium text-gray-700 mb-2\">Date</label>\n              <input\n                v-model=\"appointmentDate\"\n                type=\"date\"\n                :min=\"minDate\"\n                class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                required\n              >\n            </div>\n            <div>\n              <label class=\"block text-sm font-medium text-gray-700 mb-2\">Time</label>\n              <select\n                v-model=\"appointmentTime\"\n                class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                required\n              >\n                <option value=\"\">Select time</option>\n                <option v-for=\"time in availableTimes\" :key=\"time.value\" :value=\"time.value\">\n                  {{ time.label }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <!-- Duration -->\n        <div class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">Duration</label>\n          <select\n            v-model=\"duration\"\n            class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n          >\n            <option value=\"30\">30 minutes</option>\n            <option value=\"60\">1 hour</option>\n            <option value=\"90\">1.5 hours</option>\n            <option value=\"120\">2 hours</option>\n          </select>\n        </div>\n\n        <!-- Location Type -->\n        <div class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">Location</label>\n          <div class=\"space-y-2\">\n            <label class=\"flex items-center\">\n              <input\n                v-model=\"locationType\"\n                value=\"vendor_location\"\n                type=\"radio\"\n                class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500\"\n              >\n              <span class=\"ml-2 text-sm text-gray-700\">At my location</span>\n            </label>\n            <label class=\"flex items-center\">\n              <input\n                v-model=\"locationType\"\n                value=\"customer_location\"\n                type=\"radio\"\n                class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500\"\n              >\n              <span class=\"ml-2 text-sm text-gray-700\">At customer's location</span>\n            </label>\n            <label class=\"flex items-center\">\n              <input\n                v-model=\"locationType\"\n                value=\"online\"\n                type=\"radio\"\n                class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500\"\n              >\n              <span class=\"ml-2 text-sm text-gray-700\">Online/Virtual</span>\n            </label>\n          </div>\n        </div>\n\n        <!-- Customer Address (if customer location) -->\n        <div v-if=\"locationType === 'customer_location'\" class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">Customer Address</label>\n          <textarea\n            v-model=\"customerAddress\"\n            rows=\"3\"\n            placeholder=\"Enter customer's address...\"\n            class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n          ></textarea>\n        </div>\n\n        <!-- Meeting Link (if online) -->\n        <div v-if=\"locationType === 'online'\" class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">Meeting Link</label>\n          <input\n            v-model=\"meetingLink\"\n            type=\"url\"\n            placeholder=\"https://zoom.us/j/...\"\n            class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n          >\n        </div>\n\n        <!-- Notes -->\n        <div class=\"mb-6\">\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">Notes</label>\n          <textarea\n            v-model=\"notes\"\n            rows=\"3\"\n            placeholder=\"Add any special instructions or notes for this appointment...\"\n            class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n          ></textarea>\n        </div>\n\n        <!-- Appointment Summary -->\n        <div v-if=\"selectedService\" class=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n          <h4 class=\"font-medium text-gray-900 mb-2\">Appointment Summary</h4>\n          <div class=\"space-y-1 text-sm text-gray-600\">\n            <div><strong>Service:</strong> {{ selectedService.title }}</div>\n            <div><strong>Duration:</strong> {{ duration }} minutes</div>\n            <div><strong>Price:</strong> R{{ selectedService.price }}</div>\n            <div v-if=\"appointmentDate && appointmentTime\">\n              <strong>Date & Time:</strong> {{ formatDateTime }}\n            </div>\n          </div>\n        </div>\n\n        <!-- Actions -->\n        <div class=\"flex items-center justify-end space-x-3\">\n          <button\n            type=\"button\"\n            @click=\"emit('close')\"\n            class=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            :disabled=\"!canSave\"\n            class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center\"\n          >\n            <svg\n              v-if=\"isLoading\"\n              class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n            >\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            {{ isLoading ? 'Creating...' : 'Create Appointment' }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { XMarkIcon } from '@heroicons/vue/24/outline'\n\n// Props\nconst props = defineProps<{\n  selectedDate?: Date\n  selectedTime?: string\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  close: []\n  save: [booking: any]\n}>()\n\n// Reactive state\nconst customerSearch = ref('')\nconst customerResults = ref([])\nconst showCustomerResults = ref(false)\nconst selectedCustomer = ref(null)\nconst selectedServiceId = ref('')\nconst appointmentDate = ref('')\nconst appointmentTime = ref('')\nconst duration = ref('60')\nconst locationType = ref('vendor_location')\nconst customerAddress = ref('')\nconst meetingLink = ref('')\nconst notes = ref('')\nconst services = ref([])\n\n// Error handling and loading states\nconst isLoading = ref(false)\nconst errorMessage = ref('')\nconst successMessage = ref('')\n\n// Computed\nconst selectedService = computed(() => {\n  return services.value.find(service => service.id === selectedServiceId.value)\n})\n\nconst minDate = computed(() => {\n  const today = new Date()\n  return today.toISOString().split('T')[0]\n})\n\nconst availableTimes = computed(() => {\n  // Generate time slots from 8 AM to 6 PM in 30-minute intervals\n  const times = []\n  for (let hour = 8; hour <= 18; hour++) {\n    for (let minute = 0; minute < 60; minute += 30) {\n      const time = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`\n      const display = new Date(`2000-01-01T${time}`).toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true\n      })\n      times.push({ value: time, label: display })\n    }\n  }\n  return times\n})\n\nconst formatDateTime = computed(() => {\n  if (!appointmentDate.value || !appointmentTime.value) return ''\n  \n  const date = new Date(appointmentDate.value)\n  const [hours, minutes] = appointmentTime.value.split(':')\n  date.setHours(parseInt(hours), parseInt(minutes))\n  \n  return date.toLocaleDateString('en-US', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true\n  })\n})\n\nconst canSave = computed(() => {\n  const hasCustomer = selectedCustomer.value && selectedCustomer.value.id\n  const hasService = selectedServiceId.value && selectedServiceId.value !== ''\n  const hasDate = appointmentDate.value && appointmentDate.value !== ''\n  const hasTime = appointmentTime.value && appointmentTime.value !== ''\n  \n  const result = hasCustomer && hasService && hasDate && hasTime && !isLoading.value\n  \n  console.log('canSave computed:', { \n    hasCustomer, \n    hasService, \n    hasDate, \n    hasTime, \n    isLoading: isLoading.value,\n    result\n  })\n  \n  return result\n})\n\n// Methods\nconst searchCustomers = async () => {\n  if (customerSearch.value.length < 2) {\n    showCustomerResults.value = false\n    return\n  }\n  \n  try {\n    // Mock customer search - replace with actual API call\n    const mockCustomers = [\n      { id: '1', name: 'John Doe', email: 'john@example.com' },\n      { id: '2', name: 'Jane Smith', email: 'jane@example.com' },\n      { id: '3', name: 'Bob Johnson', email: 'bob@example.com' }\n    ]\n    \n    customerResults.value = mockCustomers.filter(customer =>\n      customer.name.toLowerCase().includes(customerSearch.value.toLowerCase()) ||\n      customer.email.toLowerCase().includes(customerSearch.value.toLowerCase())\n    )\n    showCustomerResults.value = true\n  } catch (error) {\n    console.error('Failed to search customers:', error)\n  }\n}\n\nconst selectCustomer = (customer) => {\n  selectedCustomer.value = customer\n  customerSearch.value = customer.name\n  showCustomerResults.value = false\n}\n\nconst clearCustomer = () => {\n  selectedCustomer.value = null\n  customerSearch.value = ''\n}\n\nconst updateServiceDetails = () => {\n  const service = selectedService.value\n  if (service && service.duration) {\n    duration.value = service.duration.toString()\n  }\n}\n\nconst loadServices = async () => {\n  try {\n    clearMessages()\n    // Fetch vendor's services using the useServices composable\n    const { fetchMyServices } = useServices()\n    const response = await fetchMyServices()\n    \n    if (response && response.data) {\n      // Map the service data to match our expected format\n      services.value = response.data.map(service => ({\n        id: service.id,\n        title: service.title,\n        price: service.base_price,\n        duration: service.duration_minutes || 60,\n        description: service.description,\n        currency: service.currency\n      }))\n      \n      if (services.value.length === 0) {\n        errorMessage.value = 'No services found. Please create a service first before scheduling appointments.'\n      }\n    } else {\n      services.value = []\n      errorMessage.value = 'Failed to load services. Please try refreshing the page.'\n    }\n    \n    console.log('Loaded vendor services:', services.value)\n  } catch (error) {\n    console.error('Failed to load services:', error)\n    services.value = []\n    errorMessage.value = 'Unable to load services. Please check your internet connection and try again.'\n  }\n}\n\n// Clear messages\nconst clearMessages = () => {\n  errorMessage.value = ''\n  successMessage.value = ''\n}\n\n// Validate form data\nconst validateForm = () => {\n  clearMessages()\n  \n  if (!selectedCustomer.value || !selectedCustomer.value.id) {\n    errorMessage.value = 'Please select a customer'\n    return false\n  }\n  \n  if (!selectedServiceId.value) {\n    errorMessage.value = 'Please select a service'\n    return false\n  }\n  \n  if (!appointmentDate.value) {\n    errorMessage.value = 'Please select an appointment date'\n    return false\n  }\n  \n  if (!appointmentTime.value) {\n    errorMessage.value = 'Please select an appointment time'\n    return false\n  }\n  \n  // Validate date is not in the past\n  const selectedDateTime = new Date(`${appointmentDate.value}T${appointmentTime.value}`)\n  if (selectedDateTime < new Date()) {\n    errorMessage.value = 'Appointment date and time cannot be in the past'\n    return false\n  }\n  \n  // Validate location-specific requirements\n  if (locationType.value === 'customer_location' && !customerAddress.value.trim()) {\n    errorMessage.value = 'Customer address is required for customer location appointments'\n    return false\n  }\n  \n  if (locationType.value === 'online' && !meetingLink.value.trim()) {\n    errorMessage.value = 'Meeting link is required for online appointments'\n    return false\n  }\n  \n  return true\n}\n\nconst handleSave = async () => {\n  console.log('handleSave called')\n  console.log('Form validation state:', {\n    selectedCustomer: selectedCustomer.value,\n    selectedServiceId: selectedServiceId.value,\n    appointmentDate: appointmentDate.value,\n    appointmentTime: appointmentTime.value,\n    canSave: canSave.value\n  })\n  \n  if (!validateForm()) {\n    console.log('Validation failed')\n    return\n  }\n  \n  console.log('Validation passed, proceeding with save')\n  \n  isLoading.value = true\n  clearMessages()\n  \n  try {\n    const bookingData = {\n      customer_id: selectedCustomer.value.id,\n      service_id: selectedServiceId.value,\n      scheduled_at: new Date(`${appointmentDate.value}T${appointmentTime.value}`).toISOString(),\n      duration_minutes: parseInt(duration.value),\n      location_type: locationType.value,\n      customer_address: locationType.value === 'customer_location' ? customerAddress.value : null,\n      meeting_link: locationType.value === 'online' ? meetingLink.value : null,\n      vendor_notes: notes.value,\n      status: 'confirmed'\n    }\n    \n    console.log('Creating booking with data:', bookingData)\n    \n    // Use the booking composable directly to handle the API call\n    const { createBooking } = useBooking()\n    const response = await createBooking(bookingData)\n    \n    console.log('Booking created successfully:', response)\n    successMessage.value = 'Appointment created successfully!'\n    \n    // Emit success to parent to refresh calendar and close modal\n    emit('save', response)\n    \n    // Close modal after a short delay to show success message\n    setTimeout(() => {\n      emit('close')\n    }, 1500)\n    \n  } catch (error) {\n    console.error('Error creating appointment:', error)\n    \n    // Handle different types of errors\n    if (error.response?.data?.message) {\n      errorMessage.value = error.response.data.message\n    } else if (error.data?.message) {\n      errorMessage.value = error.data.message\n    } else if (error.message) {\n      errorMessage.value = error.message\n    } else {\n      errorMessage.value = 'Failed to create appointment. Please try again.'\n    }\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Quick select functions for testing\nconst quickSelectCustomer = () => {\n  selectedCustomer.value = { id: '1', name: 'John Doe', email: 'john@example.com' }\n  customerSearch.value = 'John Doe'\n  showCustomerResults.value = false\n}\n\nconst quickSelectService = () => {\n  // Select the first available service\n  if (services.value.length > 0) {\n    selectedServiceId.value = services.value[0].id\n  }\n}\n\n// Initialize data\nonMounted(() => {\n  loadServices()\n  \n  // Set initial date and time if provided\n  if (props.selectedDate) {\n    appointmentDate.value = props.selectedDate.toISOString().split('T')[0]\n  } else {\n    // Default to today if no date provided\n    appointmentDate.value = new Date().toISOString().split('T')[0]\n  }\n  \n  if (props.selectedTime) {\n    appointmentTime.value = props.selectedTime\n  }\n  \n  // Add debugging for initialization\n  console.log('Modal initialized with:', {\n    selectedDate: props.selectedDate,\n    selectedTime: props.selectedTime,\n    appointmentDate: appointmentDate.value,\n    appointmentTime: appointmentTime.value\n  })\n})\n\n// Reset form when modal opens/closes\nconst resetForm = () => {\n  selectedCustomer.value = null\n  customerSearch.value = ''\n  showCustomerResults.value = false\n  selectedServiceId.value = ''\n  appointmentTime.value = ''\n  duration.value = '60'\n  locationType.value = 'vendor_location'\n  customerAddress.value = ''\n  meetingLink.value = ''\n  notes.value = ''\n  clearMessages()\n}\n\n// Watch for clicks outside customer search\nwatch(customerSearch, (newValue) => {\n  if (!newValue) {\n    showCustomerResults.value = false\n  }\n})\n\n// Watch for modal close/open to reset form\nwatch(() => props, () => {\n  if (props.selectedDate || props.selectedTime) {\n    // Modal is opening, reset form but keep date/time\n    resetForm()\n  }\n}, { immediate: true })\n</script>","<template>\n  <div class=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n    <div class=\"relative top-20 mx-auto p-5 border w-11/12 md:w-2/3 lg:w-1/2 shadow-lg rounded-md bg-white\">\n      <div class=\"mt-3\">\n        <!-- Header -->\n        <div class=\"flex items-center justify-between mb-6 pb-4 border-b border-gray-200\">\n          <h3 class=\"text-lg font-medium text-gray-900\">\n            Reschedule Booking\n          </h3>\n          <button\n            @click=\"$emit('close')\"\n            class=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <XMarkIcon class=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        <!-- Content -->\n        <div class=\"space-y-6\">\n          <div class=\"bg-gray-50 rounded-lg p-4 mb-6\">\n            <h4 class=\"font-medium text-gray-900 mb-2\">Current Booking</h4>\n            <div class=\"text-sm text-gray-600\">\n              <p><strong>Service:</strong> {{ booking.service?.title }}</p>\n              <p><strong>Current Date:</strong> {{ formatDateTime(booking.scheduled_at) }}</p>\n              <p><strong>Duration:</strong> {{ booking.duration_minutes }} minutes</p>\n            </div>\n          </div>\n\n          <!-- New Date Selection -->\n          <div class=\"space-y-6\">\n            <div class=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label for=\"new-date\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Select New Date\n                </label>\n                <input\n                  id=\"new-date\"\n                  v-model=\"selectedDate\"\n                  type=\"date\"\n                  :min=\"minDate\"\n                  class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                >\n              </div>\n              <div>\n                <label for=\"new-time\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Select New Time\n                </label>\n                <select\n                  id=\"new-time\"\n                  v-model=\"selectedTime\"\n                  class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"\">Choose a time</option>\n                  <option v-for=\"slot in availableTimeSlots\" :key=\"slot.value\" :value=\"slot.value\">\n                    {{ slot.label }}\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <!-- Reason for Rescheduling -->\n            <div>\n              <label for=\"reason\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                Reason for Rescheduling (Optional)\n              </label>\n              <textarea\n                id=\"reason\"\n                v-model=\"reason\"\n                rows=\"3\"\n                placeholder=\"Please provide a reason for rescheduling...\"\n                class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              ></textarea>\n            </div>\n\n            <!-- New Booking Summary -->\n            <div v-if=\"selectedDate && selectedTime\" class=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <h4 class=\"font-medium text-blue-900 mb-2\">New Booking Details</h4>\n              <div class=\"text-sm text-blue-800\">\n                <p><strong>New Date:</strong> {{ formatNewDateTime() }}</p>\n                <p><strong>Duration:</strong> {{ booking.duration_minutes }} minutes</p>\n                <p class=\"mt-2 text-xs text-blue-600\">\n                  ⚠️ The service provider will need to confirm this new time slot.\n                </p>\n              </div>\n            </div>\n\n            <!-- Warning -->\n            <div class=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n              <div class=\"flex\">\n                <ExclamationTriangleIcon class=\"h-5 w-5 text-yellow-400\" />\n                <div class=\"ml-3\">\n                  <h3 class=\"text-sm font-medium text-yellow-800\">\n                    Important Notice\n                  </h3>\n                  <div class=\"mt-2 text-sm text-yellow-700\">\n                    <ul class=\"list-disc list-inside space-y-1\">\n                      <li>Rescheduling must be done at least 24 hours before the original booking time</li>\n                      <li>The service provider must approve the new time slot</li>\n                      <li>You may be charged a rescheduling fee depending on the service terms</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Actions -->\n        <div class=\"flex items-center justify-end space-x-3 pt-4 border-t border-gray-200\">\n          <button\n            @click=\"$emit('close')\"\n            type=\"button\"\n            class=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\n          >\n            Cancel\n          </button>\n          \n          <button\n            @click=\"confirmReschedule\"\n            :disabled=\"!selectedDate || !selectedTime || isLoading\"\n            type=\"button\"\n            class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center\"\n          >\n            <svg\n              v-if=\"isLoading\"\n              class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n            >\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            {{ isLoading ? 'Rescheduling...' : 'Reschedule Booking' }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport { XMarkIcon, ExclamationTriangleIcon } from '@heroicons/vue/24/outline'\n\nconst props = defineProps<{\n  booking: any\n}>()\n\nconst emit = defineEmits<{\n  close: []\n  reschedule: [booking: any, newDateTime: string]\n}>()\n\n// Reactive state\nconst selectedDate = ref('')\nconst selectedTime = ref('')\nconst reason = ref('')\nconst isLoading = ref(false)\n\n// Computed properties\nconst minDate = computed(() => {\n  const tomorrow = new Date()\n  tomorrow.setDate(tomorrow.getDate() + 1)\n  return tomorrow.toISOString().split('T')[0]\n})\n\nconst availableTimeSlots = computed(() => {\n  if (!selectedDate.value) return []\n  \n  // Generate time slots from 8 AM to 6 PM in 30-minute intervals\n  const slots = []\n  for (let hour = 8; hour <= 18; hour++) {\n    for (let minute = 0; minute < 60; minute += 30) {\n      if (hour === 18 && minute > 0) break // Stop at 6:00 PM\n      \n      const timeValue = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`\n      const displayHour = hour > 12 ? hour - 12 : hour === 0 ? 12 : hour\n      const period = hour >= 12 ? 'PM' : 'AM'\n      const displayMinute = minute.toString().padStart(2, '0')\n      \n      slots.push({\n        value: timeValue,\n        label: `${displayHour}:${displayMinute} ${period}`\n      })\n    }\n  }\n  \n  return slots\n})\n\n// Methods\nconst formatDateTime = (dateString: string) => {\n  return new Date(dateString).toLocaleString('en-US', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true\n  })\n}\n\nconst formatNewDateTime = () => {\n  if (!selectedDate.value || !selectedTime.value) return ''\n  \n  const date = new Date(`${selectedDate.value}T${selectedTime.value}`)\n  return date.toLocaleString('en-US', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true\n  })\n}\n\nconst confirmReschedule = async () => {\n  if (!selectedDate.value || !selectedTime.value) return\n  \n  isLoading.value = true\n  \n  try {\n    const newDateTime = `${selectedDate.value}T${selectedTime.value}:00`\n    emit('reschedule', props.booking, newDateTime)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Initialize with current date + 1 day\nonMounted(() => {\n  const tomorrow = new Date()\n  tomorrow.setDate(tomorrow.getDate() + 1)\n  selectedDate.value = tomorrow.toISOString().split('T')[0]\n})\n</script>","<template>\n  <div class=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n    <div class=\"relative top-20 mx-auto p-5 border w-11/12 md:w-2/3 lg:w-1/2 shadow-lg rounded-md bg-white\">\n      <!-- Header -->\n      <div class=\"flex items-center justify-between mb-6\">\n        <div>\n          <h3 class=\"text-lg font-medium text-gray-900\">Appointment Details</h3>\n          <p class=\"text-sm text-gray-500\">{{ formatDateTime }}</p>\n        </div>\n        <button\n          @click=\"emit('close')\"\n          class=\"text-gray-400 hover:text-gray-600 transition-colors\"\n        >\n          <XMarkIcon class=\"w-6 h-6\" />\n        </button>\n      </div>\n\n      <!-- Content -->\n      <div class=\"space-y-6\">\n        <!-- Status -->\n        <div class=\"flex items-center justify-between\">\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n            <span \n              :class=\"[\n                'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium',\n                getStatusColor(appointment.status)\n              ]\"\n            >\n              {{ getStatusText(appointment.status) }}\n            </span>\n          </div>\n          \n          <div class=\"flex items-center space-x-2\">\n            <button\n              v-if=\"appointment.status === 'pending'\"\n              @click=\"updateStatus('confirmed')\"\n              :disabled=\"loading\"\n              class=\"inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-green-600 hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <CheckIcon class=\"w-4 h-4 mr-1\" />\n              {{ loading ? 'Confirming...' : 'Confirm' }}\n            </button>\n            \n            <button\n              v-if=\"appointment.status === 'confirmed'\"\n              @click=\"updateStatus('in_progress')\"\n              :disabled=\"loading\"\n              class=\"inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-blue-600 hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <PlayIcon class=\"w-4 h-4 mr-1\" />\n              {{ loading ? 'Starting...' : 'Start' }}\n            </button>\n            \n            <button\n              v-if=\"appointment.status === 'in_progress'\"\n              @click=\"updateStatus('completed')\"\n              :disabled=\"loading\"\n              class=\"inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-purple-600 hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <CheckCircleIcon class=\"w-4 h-4 mr-1\" />\n              {{ loading ? 'Completing...' : 'Complete' }}\n            </button>\n          </div>\n        </div>\n\n        <!-- Customer Information -->\n        <div>\n          <h4 class=\"text-sm font-medium text-gray-900 mb-3\">Customer Information</h4>\n          <div class=\"bg-gray-50 rounded-lg p-4\">\n            <div class=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1\">Name</label>\n                <div class=\"font-medium\">{{ appointment.customer?.name }}</div>\n              </div>\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1\">Email</label>\n                <div>{{ appointment.customer?.email }}</div>\n              </div>\n              <div v-if=\"appointment.customer?.phone\">\n                <label class=\"block text-xs text-gray-500 mb-1\">Phone</label>\n                <div>{{ appointment.customer?.phone }}</div>\n              </div>\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1\">Customer Since</label>\n                <div>{{ formatDate(appointment.customer?.created_at) }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Service Information -->\n        <div>\n          <h4 class=\"text-sm font-medium text-gray-900 mb-3\">Service Information</h4>\n          <div class=\"bg-gray-50 rounded-lg p-4\">\n            <div class=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1\">Service</label>\n                <div class=\"font-medium\">{{ appointment.service?.title }}</div>\n              </div>\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1\">Duration</label>\n                <div>{{ appointment.duration }} minutes</div>\n              </div>\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1\">Price</label>\n                <div class=\"font-medium\">R{{ appointment.service?.price }}</div>\n              </div>\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1\">Location</label>\n                <div>{{ getLocationText(appointment.location_type) }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Location Details -->\n        <div v-if=\"appointment.customer_address || appointment.meeting_link\">\n          <h4 class=\"text-sm font-medium text-gray-900 mb-3\">Location Details</h4>\n          <div class=\"bg-gray-50 rounded-lg p-4\">\n            <div v-if=\"appointment.customer_address\">\n              <label class=\"block text-xs text-gray-500 mb-1\">Customer Address</label>\n              <div>{{ appointment.customer_address }}</div>\n            </div>\n            <div v-if=\"appointment.meeting_link\">\n              <label class=\"block text-xs text-gray-500 mb-1\">Meeting Link</label>\n              <a \n                :href=\"appointment.meeting_link\" \n                target=\"_blank\"\n                class=\"text-blue-600 hover:text-blue-700 underline\"\n              >\n                {{ appointment.meeting_link }}\n              </a>\n            </div>\n          </div>\n        </div>\n\n        <!-- Notes -->\n        <div v-if=\"appointment.customer_notes || appointment.vendor_notes\">\n          <h4 class=\"text-sm font-medium text-gray-900 mb-3\">Notes</h4>\n          <div class=\"space-y-3\">\n            <div v-if=\"appointment.customer_notes\" class=\"bg-blue-50 rounded-lg p-4\">\n              <label class=\"block text-xs text-blue-700 mb-1\">Customer Notes</label>\n              <div class=\"text-blue-900\">{{ appointment.customer_notes }}</div>\n            </div>\n            <div v-if=\"appointment.vendor_notes\" class=\"bg-purple-50 rounded-lg p-4\">\n              <label class=\"block text-xs text-purple-700 mb-1\">Your Notes</label>\n              <div class=\"text-purple-900\">{{ appointment.vendor_notes }}</div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Edit Notes -->\n        <div>\n          <h4 class=\"text-sm font-medium text-gray-900 mb-3\">Add/Edit Notes</h4>\n          <textarea\n            v-model=\"editNotes\"\n            rows=\"3\"\n            placeholder=\"Add notes about this appointment...\"\n            class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n          ></textarea>\n        </div>\n\n        <!-- Booking Details -->\n        <div>\n          <h4 class=\"text-sm font-medium text-gray-900 mb-3\">Booking Details</h4>\n          <div class=\"bg-gray-50 rounded-lg p-4\">\n            <div class=\"grid grid-cols-2 gap-4 text-sm\">\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1\">Booking Reference</label>\n                <div class=\"font-mono\">{{ appointment.booking_reference }}</div>\n              </div>\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1\">Created</label>\n                <div>{{ formatDate(appointment.created_at) }}</div>\n              </div>\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1\">Total Amount</label>\n                <div class=\"font-medium\">R{{ appointment.total_amount }}</div>\n              </div>\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1\">Payment Status</label>\n                <span \n                  :class=\"[\n                    'inline-flex items-center px-2 py-0.5 rounded text-xs font-medium',\n                    appointment.payment_status === 'paid' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n                  ]\"\n                >\n                  {{ appointment.payment_status || 'pending' }}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Actions -->\n        <div class=\"flex items-center justify-between pt-4 border-t border-gray-200\">\n          <div class=\"flex items-center space-x-3\">\n            <button\n              @click=\"showRescheduleModal = true\"\n              class=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n            >\n              <ClockIcon class=\"w-4 h-4 mr-2\" />\n              Reschedule\n            </button>\n            \n            <button\n              @click=\"confirmCancel\"\n              class=\"inline-flex items-center px-3 py-2 border border-red-300 shadow-sm text-sm font-medium rounded-md text-red-700 bg-white hover:bg-red-50\"\n            >\n              <XMarkIcon class=\"w-4 h-4 mr-2\" />\n              Cancel Appointment\n            </button>\n          </div>\n          \n          <div class=\"flex items-center space-x-3\">\n            <button\n              @click=\"emit('close')\"\n              class=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\n            >\n              Close\n            </button>\n            \n            <button\n              @click=\"saveChanges\"\n              :disabled=\"loading\"\n              class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {{ loading ? 'Saving...' : 'Save Changes' }}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Reschedule Modal -->\n      <RescheduleModal\n        v-if=\"showRescheduleModal\"\n        :booking=\"appointment\"\n        @close=\"showRescheduleModal = false\"\n        @reschedule=\"handleReschedule\"\n      />\n\n      <!-- Cancel Confirmation -->\n      <div v-if=\"showCancelConfirm\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n        <div class=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\n          <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Cancel Appointment</h3>\n          <p class=\"text-gray-600 mb-4\">Are you sure you want to cancel this appointment? This action cannot be undone.</p>\n          \n          <div class=\"mb-4\">\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Cancellation Reason</label>\n            <select\n              v-model=\"cancelReason\"\n              class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n            >\n              <option value=\"\">Select a reason</option>\n              <option value=\"provider_unavailable\">Provider unavailable</option>\n              <option value=\"emergency\">Emergency</option>\n              <option value=\"customer_request\">Customer requested</option>\n              <option value=\"weather\">Weather conditions</option>\n              <option value=\"other\">Other</option>\n            </select>\n            \n            <!-- Error message -->\n            <div v-if=\"cancelError\" class=\"mt-2 text-sm text-red-600\">\n              {{ cancelError }}\n            </div>\n          </div>\n          \n          <div class=\"flex items-center justify-end space-x-3\">\n            <button\n              @click=\"showCancelConfirm = false\"\n              class=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n            >\n              Keep Appointment\n            </button>\n            <button\n              @click=\"handleCancel\"\n              :disabled=\"cancelling\"\n              class=\"px-4 py-2 bg-red-600 text-white rounded-md text-sm font-medium hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center\"\n            >\n              <div v-if=\"cancelling\" class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n              {{ cancelling ? 'Cancelling...' : 'Cancel Appointment' }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue'\nimport { \n  XMarkIcon, \n  CheckIcon, \n  PlayIcon, \n  CheckCircleIcon, \n  ClockIcon \n} from '@heroicons/vue/24/outline'\nimport RescheduleModal from '~/components/booking/RescheduleModal.vue'\n\n// Use booking composable for proper API calls\nconst {\n  confirmBooking,\n  markInProgress,\n  completeBooking,\n  updateBooking,\n  cancelBooking: cancelBookingAction,\n  loading\n} = useBooking()\n\n// Props\nconst props = defineProps<{\n  appointment: any\n}>()\n\n// Emits\nconst emit = defineEmits<{\n  close: []\n  update: [appointment: any]\n  delete: [appointmentId: string]\n}>()\n\n// Reactive state\nconst editNotes = ref(props.appointment.vendor_notes || '')\nconst showRescheduleModal = ref(false)\nconst showCancelConfirm = ref(false)\nconst cancelReason = ref('')\nconst cancelError = ref('')\nconst cancelling = ref(false)\n\n// Computed\nconst formatDateTime = computed(() => {\n  const date = new Date(props.appointment.scheduled_at)\n  return date.toLocaleDateString('en-US', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true\n  })\n})\n\n// Methods\nconst getStatusColor = (status: string) => {\n  const colors = {\n    pending: 'bg-yellow-100 text-yellow-800',\n    confirmed: 'bg-blue-100 text-blue-800',\n    in_progress: 'bg-purple-100 text-purple-800',\n    completed: 'bg-green-100 text-green-800',\n    cancelled: 'bg-red-100 text-red-800'\n  }\n  return colors[status] || 'bg-gray-100 text-gray-800'\n}\n\nconst getStatusText = (status: string) => {\n  const texts = {\n    pending: 'Pending',\n    confirmed: 'Confirmed',\n    in_progress: 'In Progress',\n    completed: 'Completed',\n    cancelled: 'Cancelled'\n  }\n  return texts[status] || status\n}\n\nconst getLocationText = (locationType: string) => {\n  const locationMap = {\n    'vendor_location': 'Provider Location',\n    'customer_location': 'Customer Location',\n    'online': 'Online/Virtual'\n  }\n  return locationMap[locationType] || locationType\n}\n\nconst formatDate = (dateString: string) => {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  })\n}\n\nconst updateStatus = async (newStatus: string) => {\n  try {\n    let result\n    \n    // Use the appropriate composable method based on the new status\n    switch (newStatus) {\n      case 'confirmed':\n        result = await confirmBooking(props.appointment.id)\n        break\n      case 'in_progress':\n        result = await markInProgress(props.appointment.id)\n        break\n      case 'completed':\n        result = await completeBooking(props.appointment.id)\n        break\n      default:\n        // For other status updates, use the general update method\n        result = await updateBooking(props.appointment.id, { \n          status: newStatus,\n          vendor_notes: editNotes.value \n        })\n    }\n    \n    // Emit the updated appointment data\n    emit('update', result.booking || result)\n  } catch (error) {\n    console.error('Failed to update appointment status:', error)\n    // You could add a toast notification here to show the error to the user\n  }\n}\n\nconst saveChanges = async () => {\n  try {\n    const result = await updateBooking(props.appointment.id, {\n      vendor_notes: editNotes.value\n    })\n    \n    // Emit the updated appointment data\n    emit('update', result.booking || result)\n  } catch (error) {\n    console.error('Failed to save appointment changes:', error)\n    // You could add a toast notification here to show the error to the user\n  }\n}\n\nconst confirmCancel = () => {\n  cancelError.value = ''\n  cancelReason.value = ''\n  showCancelConfirm.value = true\n}\n\nconst handleCancel = async () => {\n  if (!cancelReason.value) {\n    cancelError.value = 'Please select a cancellation reason'\n    return\n  }\n  \n  cancelling.value = true\n  cancelError.value = ''\n  \n  try {\n    await cancelBookingAction(props.appointment.id, cancelReason.value)\n    showCancelConfirm.value = false\n    emit('update', { ...props.appointment, status: 'cancelled' })\n  } catch (error) {\n    console.error('Failed to cancel appointment:', error)\n    cancelError.value = error.data?.message || error.message || 'Failed to cancel appointment. Please try again.'\n  } finally {\n    cancelling.value = false\n  }\n}\n\nconst handleReschedule = (newDateTime: string) => {\n  const updatedAppointment = {\n    ...props.appointment,\n    scheduled_at: newDateTime\n  }\n  emit('update', updatedAppointment)\n  showRescheduleModal.value = false\n}\n</script>","<template>\n  <NuxtLayout name=\"dashboard\">\n    <div>\n      <!-- Calendar Header -->\n      <div class=\"mb-6\">\n        <div class=\"flex items-center justify-between\">\n          <div>\n            <h1 class=\"text-2xl font-bold text-gray-900\">Calendar</h1>\n            <p class=\"text-gray-600\">Manage your appointments and availability</p>\n          </div>\n          \n          <div class=\"flex items-center space-x-4\">\n            <!-- View Toggle -->\n            <div class=\"bg-gray-100 p-1 rounded-lg flex\">\n              <button\n                @click=\"currentView = 'month'\"\n                :class=\"[\n                  'px-3 py-1 text-sm font-medium rounded-md transition-colors',\n                  currentView === 'month' \n                    ? 'bg-white text-blue-600 shadow-sm' \n                    : 'text-gray-600 hover:text-gray-900'\n                ]\"\n              >\n                Month\n              </button>\n              <button\n                @click=\"currentView = 'week'\"\n                :class=\"[\n                  'px-3 py-1 text-sm font-medium rounded-md transition-colors',\n                  currentView === 'week' \n                    ? 'bg-white text-blue-600 shadow-sm' \n                    : 'text-gray-600 hover:text-gray-900'\n                ]\"\n              >\n                Week\n              </button>\n              <button\n                @click=\"currentView = 'day'\"\n                :class=\"[\n                  'px-3 py-1 text-sm font-medium rounded-md transition-colors',\n                  currentView === 'day' \n                    ? 'bg-white text-blue-600 shadow-sm' \n                    : 'text-gray-600 hover:text-gray-900'\n                ]\"\n              >\n                Day\n              </button>\n            </div>\n\n            <!-- Quick Actions -->\n            <button\n              @click=\"showAvailabilityModal = true\"\n              class=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <ClockIcon class=\"w-4 h-4 mr-2\" />\n              Set Availability\n            </button>\n            \n            <button\n              @click=\"showBookingModal = true\"\n              class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <PlusIcon class=\"w-4 h-4 mr-2\" />\n              New Appointment\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Calendar Navigation -->\n      <div class=\"bg-white rounded-lg shadow mb-6 p-4\">\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex items-center space-x-4\">\n            <button\n              @click=\"navigateCalendar('prev')\"\n              class=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <ChevronLeftIcon class=\"w-5 h-5\" />\n            </button>\n            \n            <h2 class=\"text-lg font-semibold text-gray-900\">\n              {{ formatCurrentPeriod }}\n            </h2>\n            \n            <button\n              @click=\"navigateCalendar('next')\"\n              class=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <ChevronRightIcon class=\"w-5 h-5\" />\n            </button>\n          </div>\n          \n          <button\n            @click=\"goToToday\"\n            class=\"px-3 py-1 text-sm text-blue-600 hover:text-blue-700 font-medium\"\n          >\n            Today\n          </button>\n        </div>\n      </div>\n\n      <!-- Calendar Content -->\n      <div class=\"bg-white rounded-lg shadow\">\n        <!-- Month View -->\n        <div v-if=\"currentView === 'month'\" class=\"p-6\">\n          <!-- Days of Week Header -->\n          <div class=\"grid grid-cols-7 gap-1 mb-4\">\n            <div \n              v-for=\"day in daysOfWeek\" \n              :key=\"day\"\n              class=\"p-2 text-center text-sm font-medium text-gray-500\"\n            >\n              {{ day }}\n            </div>\n          </div>\n          \n          <!-- Calendar Grid -->\n          <div class=\"grid grid-cols-7 gap-1\">\n            <div\n              v-for=\"(day, index) in calendarDays\"\n              :key=\"`${day.date}-${index}`\"\n              :class=\"[\n                'min-h-[120px] p-2 border border-gray-100 cursor-pointer transition-colors',\n                day.isCurrentMonth ? 'bg-white hover:bg-gray-50' : 'bg-gray-50 text-gray-400',\n                day.isToday ? 'bg-blue-50 border-blue-200' : '',\n                day.isSelected ? 'bg-blue-100 border-blue-300' : ''\n              ]\"\n              @click=\"selectDate(day)\"\n            >\n              <div class=\"flex items-center justify-between mb-1\">\n                <span \n                  :class=\"[\n                    'text-sm font-medium',\n                    day.isToday ? 'text-blue-600' : '',\n                    !day.isCurrentMonth ? 'text-gray-400' : 'text-gray-900'\n                  ]\"\n                >\n                  {{ day.date }}\n                </span>\n                \n                <!-- Availability Indicator -->\n                <div \n                  v-if=\"day.isAvailable && day.isCurrentMonth\"\n                  class=\"w-2 h-2 bg-green-400 rounded-full\"\n                  title=\"Available\"\n                ></div>\n              </div>\n              \n              <!-- Appointments for this day -->\n              <div class=\"space-y-1\">\n                <div\n                  v-for=\"appointment in day.appointments\"\n                  :key=\"appointment.id\"\n                  :class=\"[\n                    'text-xs p-1 rounded truncate cursor-pointer',\n                    getAppointmentColor(appointment.status)\n                  ]\"\n                  @click.stop=\"viewAppointment(appointment)\"\n                  :title=\"`${appointment.time} - ${appointment.service?.title}`\"\n                >\n                  {{ appointment.time }} {{ appointment.customer?.name }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Week View -->\n        <div v-else-if=\"currentView === 'week'\" class=\"p-6\">\n          <div class=\"grid grid-cols-8 gap-1\">\n            <!-- Time Column -->\n            <div class=\"space-y-1\">\n              <div class=\"h-12\"></div> <!-- Header spacer -->\n              <div\n                v-for=\"hour in dayHours\"\n                :key=\"hour\"\n                class=\"h-16 text-xs text-gray-500 pr-2 text-right\"\n              >\n                {{ formatHour(hour) }}\n              </div>\n            </div>\n            \n            <!-- Days -->\n            <div\n              v-for=\"day in weekDays\"\n              :key=\"day.date\"\n              class=\"border-l border-gray-200\"\n            >\n              <!-- Day Header -->\n              <div \n                :class=\"[\n                  'h-12 p-2 text-center border-b border-gray-200',\n                  day.isToday ? 'bg-blue-50' : 'bg-gray-50'\n                ]\"\n              >\n                <div class=\"text-xs text-gray-500\">{{ day.dayName }}</div>\n                <div \n                  :class=\"[\n                    'text-sm font-medium',\n                    day.isToday ? 'text-blue-600' : 'text-gray-900'\n                  ]\"\n                >\n                  {{ day.date }}\n                </div>\n              </div>\n              \n              <!-- Time Slots -->\n              <div class=\"relative\">\n                <div\n                  v-for=\"hour in dayHours\"\n                  :key=\"hour\"\n                  class=\"h-16 border-b border-gray-100\"\n                  @click=\"createAppointment(day, hour)\"\n                ></div>\n                \n                <!-- Appointments -->\n                <div\n                  v-for=\"appointment in day.appointments\"\n                  :key=\"appointment.id\"\n                  :class=\"[\n                    'absolute left-1 right-1 p-1 rounded text-xs cursor-pointer z-10',\n                    getAppointmentColor(appointment.status)\n                  ]\"\n                  :style=\"getAppointmentStyle(appointment)\"\n                  @click=\"viewAppointment(appointment)\"\n                >\n                  <div class=\"font-medium\">{{ appointment.customer?.name }}</div>\n                  <div>{{ appointment.service?.title }}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Day View -->\n        <div v-else-if=\"currentView === 'day'\" class=\"p-6\">\n          <div class=\"grid grid-cols-2 gap-6\">\n            <!-- Time Slots -->\n            <div>\n              <h3 class=\"text-lg font-medium text-gray-900 mb-4\">\n                {{ formatSelectedDate }}\n              </h3>\n              \n              <div class=\"space-y-1\">\n                <div\n                  v-for=\"hour in dayHours\"\n                  :key=\"hour\"\n                  :class=\"[\n                    'flex items-center justify-between p-3 border border-gray-200 rounded-lg cursor-pointer transition-colors',\n                    isHourAvailable(hour) ? 'hover:bg-gray-50' : 'bg-gray-100 cursor-not-allowed'\n                  ]\"\n                  @click=\"isHourAvailable(hour) && createAppointment(selectedDay, hour)\"\n                >\n                  <span class=\"font-medium\">{{ formatHour(hour) }}</span>\n                  \n                  <div v-if=\"getAppointmentForHour(hour)\" class=\"flex items-center space-x-2\">\n                    <span \n                      :class=\"[\n                        'px-2 py-1 rounded text-xs',\n                        getAppointmentColor(getAppointmentForHour(hour).status)\n                      ]\"\n                    >\n                      {{ getAppointmentForHour(hour).status }}\n                    </span>\n                    <span class=\"text-sm text-gray-600\">\n                      {{ getAppointmentForHour(hour).customer?.name }}\n                    </span>\n                  </div>\n                  \n                  <div v-else-if=\"isHourAvailable(hour)\" class=\"text-sm text-green-600\">\n                    Available\n                  </div>\n                  \n                  <div v-else class=\"text-sm text-gray-500\">\n                    Unavailable\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Day Summary -->\n            <div>\n              <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Day Summary</h3>\n              \n              <div class=\"space-y-4\">\n                <!-- Stats -->\n                <div class=\"grid grid-cols-2 gap-4\">\n                  <div class=\"bg-blue-50 p-4 rounded-lg\">\n                    <div class=\"text-2xl font-bold text-blue-600\">{{ dayStats.totalAppointments }}</div>\n                    <div class=\"text-sm text-blue-600\">Appointments</div>\n                  </div>\n                  <div class=\"bg-green-50 p-4 rounded-lg\">\n                    <div class=\"text-2xl font-bold text-green-600\">{{ dayStats.availableSlots }}</div>\n                    <div class=\"text-sm text-green-600\">Available Slots</div>\n                  </div>\n                </div>\n                \n                <!-- Upcoming Appointments -->\n                <div v-if=\"dayAppointments.length > 0\">\n                  <h4 class=\"font-medium text-gray-900 mb-2\">Today's Appointments</h4>\n                  <div class=\"space-y-2\">\n                    <div\n                      v-for=\"appointment in dayAppointments\"\n                      :key=\"appointment.id\"\n                      class=\"p-3 border border-gray-200 rounded-lg cursor-pointer hover:bg-gray-50\"\n                      @click=\"viewAppointment(appointment)\"\n                    >\n                      <div class=\"flex items-center justify-between\">\n                        <div>\n                          <div class=\"font-medium\">{{ appointment.time }}</div>\n                          <div class=\"text-sm text-gray-600\">{{ appointment.customer?.name }}</div>\n                          <div class=\"text-sm text-gray-500\">{{ appointment.service?.title }}</div>\n                        </div>\n                        <span \n                          :class=\"[\n                            'px-2 py-1 rounded text-xs',\n                            getAppointmentColor(appointment.status)\n                          ]\"\n                        >\n                          {{ appointment.status }}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div v-else class=\"text-center py-8 text-gray-500\">\n                  <CalendarIcon class=\"w-12 h-12 mx-auto mb-2 text-gray-300\" />\n                  <p>No appointments scheduled for this day</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Modals -->\n      <AvailabilityModal\n        v-if=\"showAvailabilityModal\"\n        @close=\"showAvailabilityModal = false\"\n        @save=\"handleAvailabilitySave\"\n      />\n\n      <BookingModal\n        v-if=\"showBookingModal\"\n        :selected-date=\"selectedDate\"\n        :selected-time=\"selectedTime\"\n        @close=\"showBookingModal = false\"\n        @save=\"handleBookingSave\"\n      />\n\n      <AppointmentModal\n        v-if=\"selectedAppointment\"\n        :appointment=\"selectedAppointment\"\n        @close=\"selectedAppointment = null\"\n        @update=\"handleAppointmentUpdate\"\n        @delete=\"handleAppointmentDelete\"\n      />\n    </div>\n  </NuxtLayout>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, watch } from 'vue'\nimport {\n  CalendarIcon,\n  ClockIcon,\n  PlusIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon\n} from '@heroicons/vue/24/outline'\n\n// Explicit imports for calendar components\nimport AvailabilityModal from '~/components/calendar/AvailabilityModal.vue'\nimport BookingModal from '~/components/calendar/BookingModal.vue'\nimport AppointmentModal from '~/components/calendar/AppointmentModal.vue'\n\n// Page meta\ndefinePageMeta({\n  middleware: 'auth'\n})\n\n// Page head\nuseHead({\n  title: 'Calendar - ORDO Dashboard',\n  meta: [\n    { name: 'description', content: 'Manage your appointments and availability' }\n  ]\n})\n\n// Composables\nconst { user } = useAuth()\nconst { currentRole } = useRole()\nconst { \n  bookings, \n  loading, \n  fetchBookings,\n  createBooking,\n  updateBooking,\n  cancelBooking\n} = useBooking()\nconst {\n  availabilities,\n  fetchAvailabilities,\n  isDateAvailable,\n  getAvailabilityForDate,\n  loading: availabilityLoading\n} = useAvailability()\n\n// Reactive state\nconst currentView = ref<'month' | 'week' | 'day'>('month')\nconst currentDate = ref(new Date())\nconst selectedDate = ref<Date | null>(null)\nconst selectedTime = ref<string | null>(null)\nconst selectedAppointment = ref(null)\nconst showAvailabilityModal = ref(false)\nconst showBookingModal = ref(false)\n\n// Calendar constants\nconst daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\nconst monthNames = [\n  'January', 'February', 'March', 'April', 'May', 'June',\n  'July', 'August', 'September', 'October', 'November', 'December'\n]\n\n// Working hours (can be made configurable)\nconst workingHours = { start: 8, end: 18 } // 8 AM to 6 PM\nconst dayHours = Array.from({ length: workingHours.end - workingHours.start }, (_, i) => workingHours.start + i)\n\n// Computed properties\nconst formatCurrentPeriod = computed(() => {\n  const year = currentDate.value.getFullYear()\n  const month = currentDate.value.getMonth()\n  \n  if (currentView.value === 'month') {\n    return `${monthNames[month]} ${year}`\n  } else if (currentView.value === 'week') {\n    const startOfWeek = getStartOfWeek(currentDate.value)\n    const endOfWeek = new Date(startOfWeek)\n    endOfWeek.setDate(startOfWeek.getDate() + 6)\n    \n    if (startOfWeek.getMonth() === endOfWeek.getMonth()) {\n      return `${monthNames[startOfWeek.getMonth()]} ${startOfWeek.getDate()}-${endOfWeek.getDate()}, ${year}`\n    } else {\n      return `${monthNames[startOfWeek.getMonth()]} ${startOfWeek.getDate()} - ${monthNames[endOfWeek.getMonth()]} ${endOfWeek.getDate()}, ${year}`\n    }\n  } else {\n    const day = currentDate.value.getDate()\n    return `${monthNames[month]} ${day}, ${year}`\n  }\n})\n\nconst calendarDays = computed(() => {\n  const year = currentDate.value.getFullYear()\n  const month = currentDate.value.getMonth()\n  const firstDay = new Date(year, month, 1)\n  const lastDay = new Date(year, month + 1, 0)\n  const startDate = new Date(firstDay)\n  startDate.setDate(startDate.getDate() - firstDay.getDay())\n  \n  const days = []\n  const today = new Date()\n  \n  for (let i = 0; i < 42; i++) {\n    const date = new Date(startDate)\n    date.setDate(startDate.getDate() + i)\n    \n    const dayData = {\n      date: date.getDate(),\n      fullDate: new Date(date),\n      isCurrentMonth: date.getMonth() === month,\n      isToday: isSameDay(date, today),\n      isSelected: selectedDate.value && isSameDay(date, selectedDate.value),\n      isAvailable: isDateAvailableLocal(date),\n      appointments: getAppointmentsForDate(date)\n    }\n    \n    days.push(dayData)\n  }\n  \n  return days\n})\n\nconst weekDays = computed(() => {\n  const startOfWeek = getStartOfWeek(currentDate.value)\n  const days = []\n  const today = new Date()\n  \n  for (let i = 0; i < 7; i++) {\n    const date = new Date(startOfWeek)\n    date.setDate(startOfWeek.getDate() + i)\n    \n    days.push({\n      date: date.getDate(),\n      fullDate: new Date(date),\n      dayName: daysOfWeek[date.getDay()],\n      isToday: isSameDay(date, today),\n      appointments: getAppointmentsForDate(date)\n    })\n  }\n  \n  return days\n})\n\nconst selectedDay = computed(() => {\n  return selectedDate.value || currentDate.value\n})\n\nconst formatSelectedDate = computed(() => {\n  const date = selectedDay.value\n  return `${monthNames[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`\n})\n\nconst dayAppointments = computed(() => {\n  return getAppointmentsForDate(selectedDay.value)\n})\n\nconst dayStats = computed(() => {\n  const appointments = dayAppointments.value\n  const totalSlots = dayHours.length\n  const bookedSlots = appointments.length\n  \n  return {\n    totalAppointments: appointments.length,\n    availableSlots: totalSlots - bookedSlots\n  }\n})\n\n// Methods\nconst navigateCalendar = (direction: 'prev' | 'next') => {\n  const newDate = new Date(currentDate.value)\n  \n  if (currentView.value === 'month') {\n    newDate.setMonth(newDate.getMonth() + (direction === 'next' ? 1 : -1))\n  } else if (currentView.value === 'week') {\n    newDate.setDate(newDate.getDate() + (direction === 'next' ? 7 : -7))\n  } else {\n    newDate.setDate(newDate.getDate() + (direction === 'next' ? 1 : -1))\n  }\n  \n  currentDate.value = newDate\n}\n\nconst goToToday = () => {\n  currentDate.value = new Date()\n  selectedDate.value = new Date()\n}\n\nconst selectDate = (day: any) => {\n  selectedDate.value = day.fullDate\n  if (currentView.value === 'month') {\n    currentView.value = 'day'\n  }\n}\n\nconst getStartOfWeek = (date: Date) => {\n  const start = new Date(date)\n  start.setDate(date.getDate() - date.getDay())\n  return start\n}\n\nconst isSameDay = (date1: Date, date2: Date) => {\n  return date1.getDate() === date2.getDate() &&\n         date1.getMonth() === date2.getMonth() &&\n         date1.getFullYear() === date2.getFullYear()\n}\n\nconst isDateAvailableLocal = (date: Date) => {\n  // Check if date is not in the past\n  const today = new Date()\n  today.setHours(0, 0, 0, 0)\n  \n  if (date < today) {\n    return false\n  }\n  \n  // Use the availability composable to check if date is available\n  return isDateAvailable(date, availabilities.value)\n}\n\nconst getAppointmentsForDate = (date: Date) => {\n  // Filter bookings for the specific date\n  return bookings.value.filter(booking => {\n    const bookingDate = new Date(booking.scheduled_at)\n    return isSameDay(bookingDate, date)\n  }).map(booking => ({\n    id: booking.id,\n    time: formatTime(new Date(booking.scheduled_at)),\n    duration: booking.duration_minutes,\n    status: booking.status,\n    customer: booking.customer,\n    service: booking.service,\n    scheduled_at: booking.scheduled_at\n  }))\n}\n\nconst formatTime = (date: Date) => {\n  return date.toLocaleTimeString('en-US', { \n    hour: 'numeric', \n    minute: '2-digit',\n    hour12: true \n  })\n}\n\nconst formatHour = (hour: number) => {\n  const time = new Date()\n  time.setHours(hour, 0, 0, 0)\n  return formatTime(time)\n}\n\nconst getAppointmentColor = (status: string) => {\n  const colors = {\n    pending: 'bg-yellow-100 text-yellow-800 border-yellow-200',\n    confirmed: 'bg-blue-100 text-blue-800 border-blue-200',\n    in_progress: 'bg-purple-100 text-purple-800 border-purple-200',\n    completed: 'bg-green-100 text-green-800 border-green-200',\n    cancelled: 'bg-red-100 text-red-800 border-red-200'\n  }\n  return colors[status] || 'bg-gray-100 text-gray-800 border-gray-200'\n}\n\nconst getAppointmentStyle = (appointment: any) => {\n  const startTime = new Date(appointment.scheduled_at)\n  const hour = startTime.getHours()\n  const minutes = startTime.getMinutes()\n  const duration = appointment.duration || 60\n  \n  const topOffset = ((hour - workingHours.start) * 64) + (minutes * 64 / 60)\n  const height = (duration * 64 / 60)\n  \n  return {\n    top: `${topOffset}px`,\n    height: `${height}px`\n  }\n}\n\nconst isHourAvailable = (hour: number) => {\n  const appointment = getAppointmentForHour(hour)\n  return !appointment && isDateAvailableLocal(selectedDay.value)\n}\n\nconst getAppointmentForHour = (hour: number) => {\n  return dayAppointments.value.find(apt => {\n    const aptTime = new Date(apt.scheduled_at)\n    return aptTime.getHours() === hour\n  })\n}\n\nconst createAppointment = (day: any, hour: number) => {\n  const appointmentDate = new Date(day.fullDate || day)\n  appointmentDate.setHours(hour, 0, 0, 0)\n  \n  selectedDate.value = appointmentDate\n  selectedTime.value = formatHour(hour)\n  showBookingModal.value = true\n}\n\nconst viewAppointment = (appointment: any) => {\n  selectedAppointment.value = appointment\n}\n\nconst handleAvailabilitySave = async (availability: any) => {\n  // Availability is automatically saved by the modal\n  // Refresh calendar data to show new availability\n  await loadCalendarData()\n  showAvailabilityModal.value = false\n}\n\nconst handleBookingSave = async (response: any) => {\n  try {\n    console.log('handleBookingSave called with:', response)\n    // The modal now handles the booking creation, we just need to refresh the calendar\n    await loadCalendarData()\n    // Don't close the modal here - the modal will close itself after showing success\n  } catch (error) {\n    console.error('Failed to refresh calendar after booking creation:', error)\n  }\n}\n\nconst handleAppointmentUpdate = async (appointmentData: any) => {\n  try {\n    await updateBooking(appointmentData.id, appointmentData)\n    await loadCalendarData()\n    selectedAppointment.value = null\n  } catch (error) {\n    console.error('Failed to update appointment:', error)\n  }\n}\n\nconst handleAppointmentDelete = async (appointmentId: string, reason?: string) => {\n  try {\n    // Use cancelBooking instead of deleteBooking for proper cancellation flow\n    await cancelBooking(appointmentId, reason || 'Cancelled by provider')\n    await loadCalendarData()\n    selectedAppointment.value = null\n  } catch (error) {\n    console.error('Failed to cancel appointment:', error)\n  }\n}\n\nconst loadCalendarData = async () => {\n  try {\n    const startDate = new Date(currentDate.value)\n    startDate.setDate(1) // First day of month\n    \n    const endDate = new Date(currentDate.value)\n    endDate.setMonth(endDate.getMonth() + 1, 0) // Last day of month\n    \n    // Load both bookings and availabilities in parallel\n    await Promise.all([\n      fetchBookings({\n        type: 'vendor',\n        start_date: startDate.toISOString().split('T')[0],\n        end_date: endDate.toISOString().split('T')[0],\n        per_page: 100\n      }),\n      fetchAvailabilities({\n        // Can add date filters if needed\n      })\n    ])\n  } catch (error) {\n    console.error('Failed to load calendar data:', error)\n  }\n}\n\n// Watch for date changes to reload data\nwatch([currentDate, currentView], () => {\n  loadCalendarData()\n})\n\n// Initial load\nonMounted(() => {\n  selectedDate.value = new Date()\n  loadCalendarData()\n})\n</script>"],"names":["loading","error","_ssrRenderAttrs","_mergeProps","_ssrRenderComponent","_unref","_ssrInterpolate","_ssrRenderList","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","_ssrRenderAttr","booking","appointment","availabilities","_push","_parent","_ssrRenderStyle","_createVNode","_createBlock","_Fragment","_renderList","_openBlock","_toDisplayString","_withModifiers","AvailabilityModal","BookingModal","AppointmentModal"],"mappings":"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"}