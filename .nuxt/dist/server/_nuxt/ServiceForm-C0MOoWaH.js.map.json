{"file":"ServiceForm-C0MOoWaH.js","mappings":"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","names":["_ssrRenderAttrs","_mergeProps","label","required","multiple","maxFiles","_ssrRenderAttr","_ssrInterpolate","_unref","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","categories","_ssrRenderClass","loading","error"],"sources":["../../../../components/ImageUpload.vue","../../../../components/ServiceForm.vue"],"sourcesContent":["<template>\n  <div class=\"image-upload\">\n    <div class=\"mb-4\">\n      <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n        {{ label }}\n        <span v-if=\"required\" class=\"text-red-500\">*</span>\n      </label>\n      \n      <!-- Upload Area -->\n      <div\n        class=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors\"\n        :class=\"{ 'border-blue-500 bg-blue-50': isDragOver }\"\n        @drop=\"handleDrop\"\n        @dragover.prevent=\"isDragOver = true\"\n        @dragleave=\"isDragOver = false\"\n        @click=\"openFileDialog\"\n      >\n        <input\n          ref=\"fileInput\"\n          type=\"file\"\n          :multiple=\"multiple\"\n          accept=\"image/jpeg,image/png,image/webp\"\n          class=\"hidden\"\n          @change=\"handleFileSelect\"\n        >\n        \n        <div v-if=\"!hasImages\" class=\"text-gray-500\">\n          <svg class=\"mx-auto h-12 w-12 text-gray-400 mb-4\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\">\n            <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n          </svg>\n          <p class=\"text-lg font-medium\">{{ multiple ? 'Upload images' : 'Upload image' }}</p>\n          <p class=\"text-sm\">Drag and drop or click to select</p>\n          <p class=\"text-xs mt-2\">JPEG, PNG, or WebP up to 10MB</p>\n          <p v-if=\"multiple\" class=\"text-xs\">Maximum {{ maxFiles }} images</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Image Previews -->\n    <div v-if=\"hasImages\" class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n      <div\n        v-for=\"(image, index) in imageList\"\n        :key=\"index\"\n        class=\"relative group\"\n      >\n        <!-- Image Preview -->\n        <div class=\"aspect-square bg-gray-100 rounded-lg overflow-hidden\">\n          <img\n            :src=\"image.preview\"\n            :alt=\"`Preview ${index + 1}`\"\n            class=\"w-full h-full object-cover\"\n            @load=\"() => revokeObjectURL(image.preview)\"\n          >\n          \n          <!-- Loading Overlay -->\n          <div\n            v-if=\"image.uploading\"\n            class=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\"\n          >\n            <div class=\"text-white text-center\">\n              <svg class=\"animate-spin h-8 w-8 mx-auto mb-2\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              <span class=\"text-sm\">Processing...</span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Image Controls -->\n        <div class=\"absolute top-2 right-2 flex gap-1\">\n          <!-- Primary Badge -->\n          <button\n            v-if=\"multiple && !image.isPrimary\"\n            @click=\"setPrimary(index)\"\n            class=\"bg-white bg-opacity-90 hover:bg-opacity-100 rounded-full p-1 text-gray-600 hover:text-blue-600 transition-colors\"\n            title=\"Set as primary image\"\n          >\n            <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\n            </svg>\n          </button>\n          \n          <!-- Primary Star -->\n          <div\n            v-else-if=\"multiple && image.isPrimary\"\n            class=\"bg-yellow-500 rounded-full p-1 text-white\"\n            title=\"Primary image\"\n          >\n            <svg class=\"h-4 w-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\n            </svg>\n          </div>\n\n          <!-- Remove Button -->\n          <button\n            @click=\"removeImage(index)\"\n            class=\"bg-red-500 bg-opacity-90 hover:bg-opacity-100 rounded-full p-1 text-white transition-colors\"\n            title=\"Remove image\"\n          >\n            <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <!-- File Info -->\n        <div class=\"mt-2 text-xs text-gray-500\">\n          <p class=\"truncate\">{{ image.file.name }}</p>\n          <p>{{ formatFileSize(image.file.size) }}</p>\n          <p v-if=\"image.error\" class=\"text-red-500\">{{ image.error }}</p>\n        </div>\n      </div>\n\n      <!-- Add More Button -->\n      <div\n        v-if=\"multiple && imageList.length < maxFiles\"\n        class=\"aspect-square border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center cursor-pointer hover:border-gray-400 transition-colors\"\n        @click=\"openFileDialog\"\n      >\n        <div class=\"text-center text-gray-500\">\n          <svg class=\"h-8 w-8 mx-auto mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\" />\n          </svg>\n          <span class=\"text-sm\">Add more</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Error Message -->\n    <div v-if=\"errorMessage\" class=\"mt-2 text-sm text-red-600\">\n      {{ errorMessage }}\n    </div>\n\n    <!-- Upload Progress -->\n    <div v-if=\"isUploading\" class=\"mt-4\">\n      <div class=\"flex justify-between text-sm text-gray-600 mb-1\">\n        <span>Uploading images...</span>\n        <span>{{ uploadProgress }}%</span>\n      </div>\n      <div class=\"w-full bg-gray-200 rounded-full h-2\">\n        <div\n          class=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n          :style=\"{ width: `${uploadProgress}%` }\"\n        ></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch } from 'vue'\n\ninterface ImageItem {\n  file: File\n  preview: string\n  isPrimary: boolean\n  uploading: boolean\n  error?: string\n}\n\ninterface Props {\n  modelValue?: File[] | FileList | null\n  label?: string\n  required?: boolean\n  multiple?: boolean\n  maxFiles?: number\n  maxFileSize?: number // in MB\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  label: 'Images',\n  required: false,\n  multiple: true,\n  maxFiles: 10,\n  maxFileSize: 10\n})\n\nconst emit = defineEmits<{\n  'update:modelValue': [value: File[] | null]\n  'error': [error: string]\n  'upload-start': []\n  'upload-complete': [files: File[]]\n}>()\n\n// State\nconst fileInput = ref<HTMLInputElement>()\nconst imageList = ref<ImageItem[]>([])\nconst isDragOver = ref(false)\nconst errorMessage = ref('')\nconst isUploading = ref(false)\nconst uploadProgress = ref(0)\n\n// Computed\nconst hasImages = computed(() => imageList.value.length > 0)\n\n// Watch for external changes\nwatch(() => props.modelValue, (newValue) => {\n  if (!newValue) {\n    imageList.value = []\n    return\n  }\n\n  // Convert FileList or File[] to ImageItem[]\n  const files = Array.from(newValue)\n  imageList.value = files.map((file, index) => ({\n    file,\n    preview: URL.createObjectURL(file),\n    isPrimary: index === 0,\n    uploading: false\n  }))\n}, { immediate: true })\n\n// Methods\nconst openFileDialog = () => {\n  fileInput.value?.click()\n}\n\nconst handleFileSelect = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (target.files) {\n    processFiles(Array.from(target.files))\n  }\n}\n\nconst handleDrop = (event: DragEvent) => {\n  event.preventDefault()\n  isDragOver.value = false\n  \n  if (event.dataTransfer?.files) {\n    processFiles(Array.from(event.dataTransfer.files))\n  }\n}\n\nconst processFiles = async (files: File[]) => {\n  errorMessage.value = ''\n  \n  // Validate files\n  const validFiles: File[] = []\n  \n  for (const file of files) {\n    // Check file type\n    if (!file.type.startsWith('image/')) {\n      errorMessage.value = 'Only image files are allowed'\n      continue\n    }\n    \n    // Check file size\n    if (file.size > props.maxFileSize * 1024 * 1024) {\n      errorMessage.value = `File size must be less than ${props.maxFileSize}MB`\n      continue\n    }\n    \n    // Check total file count\n    if (imageList.value.length + validFiles.length >= props.maxFiles) {\n      errorMessage.value = `Maximum ${props.maxFiles} images allowed`\n      break\n    }\n    \n    validFiles.push(file)\n  }\n  \n  if (validFiles.length === 0) return\n  \n  // Add valid files to image list\n  const newImages: ImageItem[] = validFiles.map((file, index) => ({\n    file,\n    preview: URL.createObjectURL(file),\n    isPrimary: imageList.value.length === 0 && index === 0, // First image is primary\n    uploading: false\n  }))\n  \n  if (props.multiple) {\n    imageList.value.push(...newImages)\n  } else {\n    // Single image mode - replace existing\n    if (imageList.value.length > 0) {\n      URL.revokeObjectURL(imageList.value[0].preview)\n    }\n    imageList.value = [newImages[0]]\n  }\n  \n  // Emit updated files\n  emitFiles()\n  \n  // Start optimization process\n  await optimizeImages(newImages)\n}\n\nconst removeImage = (index: number) => {\n  const image = imageList.value[index]\n  URL.revokeObjectURL(image.preview)\n  \n  const wasPrimary = image.isPrimary\n  imageList.value.splice(index, 1)\n  \n  // Set new primary if removed image was primary\n  if (wasPrimary && imageList.value.length > 0) {\n    imageList.value[0].isPrimary = true\n  }\n  \n  emitFiles()\n}\n\nconst setPrimary = (index: number) => {\n  imageList.value.forEach((image, i) => {\n    image.isPrimary = i === index\n  })\n}\n\nconst emitFiles = () => {\n  const files = imageList.value.map(item => item.file)\n  emit('update:modelValue', files.length > 0 ? files : null)\n}\n\nconst optimizeImages = async (images: ImageItem[]) => {\n  isUploading.value = true\n  uploadProgress.value = 0\n  emit('upload-start')\n  \n  try {\n    const optimizedFiles: File[] = []\n    \n    for (let i = 0; i < images.length; i++) {\n      const image = images[i]\n      image.uploading = true\n      \n      try {\n        // Client-side optimization\n        const optimizedFile = await optimizeImage(image.file)\n        \n        // Replace original file with optimized version\n        const imageIndex = imageList.value.findIndex(item => item.file === image.file)\n        if (imageIndex !== -1) {\n          imageList.value[imageIndex].file = optimizedFile\n          optimizedFiles.push(optimizedFile)\n        }\n        \n        image.uploading = false\n        uploadProgress.value = Math.round(((i + 1) / images.length) * 100)\n        \n      } catch (error) {\n        image.error = 'Optimization failed'\n        image.uploading = false\n        console.error('Image optimization failed:', error)\n      }\n    }\n    \n    emit('upload-complete', optimizedFiles)\n    emitFiles()\n    \n  } finally {\n    isUploading.value = false\n  }\n}\n\nconst optimizeImage = async (file: File): Promise<File> => {\n  return new Promise((resolve, reject) => {\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    const img = new Image()\n    \n    img.onload = () => {\n      // Calculate optimal dimensions\n      const maxWidth = 1920\n      const maxHeight = 1280\n      let { width, height } = img\n      \n      if (width > maxWidth || height > maxHeight) {\n        const ratio = Math.min(maxWidth / width, maxHeight / height)\n        width *= ratio\n        height *= ratio\n      }\n      \n      canvas.width = width\n      canvas.height = height\n      \n      // Draw and compress\n      ctx?.drawImage(img, 0, 0, width, height)\n      \n      canvas.toBlob(\n        (blob) => {\n          if (blob) {\n            const optimizedFile = new File([blob], file.name, {\n              type: 'image/jpeg',\n              lastModified: Date.now()\n            })\n            resolve(optimizedFile)\n          } else {\n            reject(new Error('Canvas optimization failed'))\n          }\n        },\n        'image/jpeg',\n        0.85 // 85% quality\n      )\n    }\n    \n    img.onerror = () => reject(new Error('Image load failed'))\n    img.src = URL.createObjectURL(file)\n  })\n}\n\nconst formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes'\n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB', 'GB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\nconst revokeObjectURL = (url: string) => {\n  URL.revokeObjectURL(url)\n}\n\n// Cleanup on unmount\nonUnmounted(() => {\n  imageList.value.forEach(image => {\n    URL.revokeObjectURL(image.preview)\n  })\n})\n</script>\n\n<style scoped>\n.image-upload {\n  @apply w-full;\n}\n</style>","<template>\n  <form @submit.prevent=\"handleSubmit\" class=\"space-y-6\">\n    <!-- Basic Information -->\n    <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\n      <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">Basic Information</h3>\n      \n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <!-- Title -->\n        <div class=\"md:col-span-2\">\n          <label for=\"title\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Service Title *\n          </label>\n          <input\n            id=\"title\"\n            v-model=\"form.title\"\n            type=\"text\"\n            required\n            maxlength=\"100\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder=\"e.g., Professional Website Design\"\n          >\n          <p class=\"mt-1 text-xs text-gray-500\">{{ form.title.length }}/100 characters</p>\n        </div>\n\n        <!-- Category -->\n        <div>\n          <label for=\"category\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Category *\n          </label>\n          <select\n            id=\"category\"\n            v-model=\"form.category_id\"\n            required\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"\">Select a category</option>\n            <option\n              v-for=\"category in categories\"\n              :key=\"category.id\"\n              :value=\"category.id\"\n            >\n              {{ category.name }}\n            </option>\n          </select>\n        </div>\n\n        <!-- Duration -->\n        <div>\n          <label for=\"duration\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Duration (minutes)\n          </label>\n          <input\n            id=\"duration\"\n            v-model.number=\"form.duration_minutes\"\n            type=\"number\"\n            min=\"15\"\n            max=\"1440\"\n            step=\"15\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder=\"e.g., 60\"\n          >\n        </div>\n\n        <!-- Short Description -->\n        <div class=\"md:col-span-2\">\n          <label for=\"short_description\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Short Description *\n          </label>\n          <textarea\n            id=\"short_description\"\n            v-model=\"form.short_description\"\n            required\n            maxlength=\"200\"\n            rows=\"2\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder=\"Brief summary of your service (used in listings)\"\n          ></textarea>\n          <p class=\"mt-1 text-xs text-gray-500\">{{ form.short_description.length }}/200 characters</p>\n        </div>\n\n        <!-- Full Description -->\n        <div class=\"md:col-span-2\">\n          <label for=\"description\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Full Description *\n          </label>\n          <textarea\n            id=\"description\"\n            v-model=\"form.description\"\n            required\n            rows=\"6\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder=\"Detailed description of your service, what's included, your experience, etc.\"\n          ></textarea>\n        </div>\n      </div>\n    </div>\n\n    <!-- Pricing -->\n    <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\n      <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">Pricing</h3>\n      \n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <!-- Price Type -->\n        <div>\n          <label for=\"price_type\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Price Type *\n          </label>\n          <select\n            id=\"price_type\"\n            v-model=\"form.price_type\"\n            required\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"fixed\">Fixed Price</option>\n            <option value=\"hourly\">Hourly Rate</option>\n            <option value=\"negotiable\">Negotiable</option>\n          </select>\n        </div>\n\n        <!-- Base Price -->\n        <div>\n          <label for=\"base_price\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            {{ form.price_type === 'hourly' ? 'Hourly Rate' : 'Starting Price' }} *\n          </label>\n          <div class=\"relative\">\n            <span class=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500\">R</span>\n            <input\n              id=\"base_price\"\n              v-model.number=\"form.base_price\"\n              type=\"number\"\n              required\n              min=\"0\"\n              step=\"0.01\"\n              class=\"w-full pl-8 pr-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"0.00\"\n            >\n          </div>\n        </div>\n\n        <!-- Max Price -->\n        <div v-if=\"form.price_type === 'fixed'\">\n          <label for=\"max_price\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Maximum Price (optional)\n          </label>\n          <div class=\"relative\">\n            <span class=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500\">R</span>\n            <input\n              id=\"max_price\"\n              v-model.number=\"form.max_price\"\n              type=\"number\"\n              min=\"0\"\n              step=\"0.01\"\n              class=\"w-full pl-8 pr-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"0.00\"\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Location -->\n    <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\n      <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">Service Location</h3>\n      \n      <div class=\"space-y-4\">\n        <!-- Location Type -->\n        <div>\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Where do you provide this service? *\n          </label>\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <label class=\"flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50\" :class=\"{ 'border-blue-500 bg-blue-50': form.location_type === 'client_location' }\">\n              <input\n                v-model=\"form.location_type\"\n                type=\"radio\"\n                value=\"client_location\"\n                class=\"sr-only\"\n              >\n              <div class=\"flex-1 text-center\">\n                <div class=\"text-2xl mb-2\">🏠</div>\n                <div class=\"font-medium\">Client's Location</div>\n                <div class=\"text-sm text-gray-500\">I travel to client</div>\n              </div>\n            </label>\n            \n            <label class=\"flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50\" :class=\"{ 'border-blue-500 bg-blue-50': form.location_type === 'service_location' }\">\n              <input\n                v-model=\"form.location_type\"\n                type=\"radio\"\n                value=\"service_location\"\n                class=\"sr-only\"\n              >\n              <div class=\"flex-1 text-center\">\n                <div class=\"text-2xl mb-2\">🏢</div>\n                <div class=\"font-medium\">My Location</div>\n                <div class=\"text-sm text-gray-500\">Client comes to me</div>\n              </div>\n            </label>\n            \n            <label class=\"flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50\" :class=\"{ 'border-blue-500 bg-blue-50': form.location_type === 'online' }\">\n              <input\n                v-model=\"form.location_type\"\n                type=\"radio\"\n                value=\"online\"\n                class=\"sr-only\"\n              >\n              <div class=\"flex-1 text-center\">\n                <div class=\"text-2xl mb-2\">💻</div>\n                <div class=\"font-medium\">Online Service</div>\n                <div class=\"text-sm text-gray-500\">Remote/Virtual</div>\n              </div>\n            </label>\n          </div>\n        </div>\n\n        <!-- Address (if not online) -->\n        <div v-if=\"form.location_type !== 'online'\" class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label for=\"city\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n              City *\n            </label>\n            <input\n              id=\"city\"\n              v-model=\"addressForm.city\"\n              type=\"text\"\n              required\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"e.g., Cape Town\"\n            >\n          </div>\n          \n          <div>\n            <label for=\"province\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n              Province *\n            </label>\n            <select\n              id=\"province\"\n              v-model=\"addressForm.province\"\n              required\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"\">Select Province</option>\n              <option value=\"Western Cape\">Western Cape</option>\n              <option value=\"Eastern Cape\">Eastern Cape</option>\n              <option value=\"Northern Cape\">Northern Cape</option>\n              <option value=\"Free State\">Free State</option>\n              <option value=\"KwaZulu-Natal\">KwaZulu-Natal</option>\n              <option value=\"North West\">North West</option>\n              <option value=\"Gauteng\">Gauteng</option>\n              <option value=\"Mpumalanga\">Mpumalanga</option>\n              <option value=\"Limpopo\">Limpopo</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Images -->\n    <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\n      <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">Service Images</h3>\n      <ImageUpload\n        v-model=\"form.images\"\n        label=\"Upload images of your work, service setup, or results\"\n        :multiple=\"true\"\n        :max-files=\"10\"\n        :required=\"!isEditing\"\n        @error=\"handleImageError\"\n      />\n    </div>\n\n    <!-- Additional Details -->\n    <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\n      <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">Additional Details</h3>\n      \n      <div class=\"space-y-4\">\n        <!-- Tags -->\n        <div>\n          <label for=\"tags\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Tags (comma-separated)\n          </label>\n          <input\n            id=\"tags\"\n            v-model=\"tagsInput\"\n            type=\"text\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder=\"e.g., design, responsive, mobile-friendly\"\n          >\n          <p class=\"mt-1 text-xs text-gray-500\">Add relevant keywords to help customers find your service</p>\n        </div>\n\n        <!-- Requirements -->\n        <div>\n          <label for=\"requirements\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Requirements from Client\n          </label>\n          <textarea\n            id=\"requirements\"\n            v-model=\"requirementsInput\"\n            rows=\"3\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder=\"What do you need from the client? (one requirement per line)\"\n          ></textarea>\n        </div>\n\n        <!-- Options -->\n        <div class=\"flex items-center space-x-6\">\n          <label class=\"flex items-center\">\n            <input\n              v-model=\"form.instant_booking\"\n              type=\"checkbox\"\n              class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n            >\n            <span class=\"ml-2 text-sm text-gray-700\">Allow instant booking (no approval needed)</span>\n          </label>\n        </div>\n      </div>\n    </div>\n\n    <!-- Form Actions -->\n    <div class=\"flex justify-between items-center pt-6 border-t\">\n      <button\n        type=\"button\"\n        @click=\"$emit('cancel')\"\n        class=\"px-6 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n      >\n        Cancel\n      </button>\n      \n      <button\n        type=\"submit\"\n        :disabled=\"loading || !isFormValid\"\n        class=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n      >\n        <span v-if=\"loading\" class=\"flex items-center\">\n          <svg class=\"animate-spin -ml-1 mr-3 h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          {{ isEditing ? 'Updating...' : 'Creating...' }}\n        </span>\n        <span v-else>\n          {{ isEditing ? 'Update Service' : 'Create Service' }}\n        </span>\n      </button>\n    </div>\n\n    <!-- Error Message -->\n    <div v-if=\"error\" class=\"p-4 bg-red-50 border border-red-200 rounded-md\">\n      <p class=\"text-sm text-red-600\">{{ error }}</p>\n    </div>\n  </form>\n</template>\n\n<script setup lang=\"ts\">\nimport type { ServiceForm, ServiceCategory, Service } from '~/composables/useServices'\n\ninterface Props {\n  service?: Service\n  categories: ServiceCategory[]\n  loading?: boolean\n  error?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false,\n  error: ''\n})\n\nconst emit = defineEmits<{\n  submit: [data: ServiceForm]\n  cancel: []\n}>()\n\n// Form state\nconst form = reactive<ServiceForm>({\n  title: '',\n  description: '',\n  short_description: '',\n  category_id: '',\n  price_type: 'fixed',\n  base_price: 0,\n  max_price: undefined,\n  currency: 'ZAR',\n  duration_minutes: undefined,\n  location_type: 'client_location',\n  address: undefined,\n  latitude: undefined,\n  longitude: undefined,\n  tags: [],\n  requirements: [],\n  instant_booking: false,\n  images: undefined\n})\n\nconst addressForm = reactive({\n  city: '',\n  province: '',\n  street_address: ''\n})\n\nconst tagsInput = ref('')\nconst requirementsInput = ref('')\n\n// Computed\nconst isEditing = computed(() => !!props.service)\n\nconst isFormValid = computed(() => {\n  return form.title.trim() !== '' &&\n         form.description.trim() !== '' &&\n         form.short_description.trim() !== '' &&\n         form.category_id !== '' &&\n         form.base_price > 0 &&\n         (form.location_type === 'online' || (addressForm.city && addressForm.province))\n})\n\n// Watchers\nwatch(() => props.service, (service) => {\n  if (service) {\n    populateForm(service)\n  }\n}, { immediate: true })\n\nwatch([tagsInput], () => {\n  form.tags = tagsInput.value\n    .split(',')\n    .map(tag => tag.trim())\n    .filter(tag => tag.length > 0)\n})\n\nwatch([requirementsInput], () => {\n  form.requirements = requirementsInput.value\n    .split('\\n')\n    .map(req => req.trim())\n    .filter(req => req.length > 0)\n})\n\nwatch([addressForm], () => {\n  if (form.location_type !== 'online') {\n    form.address = {\n      city: addressForm.city,\n      province: addressForm.province,\n      street_address: addressForm.street_address,\n      country: 'South Africa'\n    }\n  } else {\n    form.address = undefined\n  }\n}, { deep: true })\n\n// Methods\nconst populateForm = (service: Service) => {\n  form.title = service.title\n  form.description = service.description\n  form.short_description = service.short_description || ''\n  form.category_id = service.category_id\n  form.price_type = service.price_type\n  form.base_price = service.base_price\n  form.max_price = service.max_price\n  form.currency = service.currency\n  form.duration_minutes = service.duration_minutes\n  form.location_type = service.location_type\n  form.tags = service.tags || []\n  form.requirements = service.requirements || []\n  form.instant_booking = service.instant_booking\n  \n  // Populate address\n  if (service.address) {\n    addressForm.city = service.address.city || ''\n    addressForm.province = service.address.province || ''\n    addressForm.street_address = service.address.street_address || ''\n    form.address = service.address\n  }\n  \n  // Populate tags and requirements inputs\n  tagsInput.value = form.tags.join(', ')\n  requirementsInput.value = form.requirements.join('\\n')\n}\n\nconst handleSubmit = () => {\n  if (!isFormValid.value) return\n  \n  emit('submit', { ...form })\n}\n\nconst handleImageError = (error: string) => {\n  console.error('Image upload error:', error)\n}\n</script>"],"version":3}